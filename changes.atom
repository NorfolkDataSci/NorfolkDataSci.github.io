<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://developer.github.com/</id>
  <title>GitHub API Changes</title>
  <updated>2016-07-12T07:00:00Z</updated>
  <link rel="alternate" href="http://developer.github.com/"/>
  <link rel="self" href="http://developer.github.com/changes.atom"/>
  <author>
    <name>technoweenie</name>
    <uri>https://github.com/technoweenie</uri>
  </author>
  <entry>
    <id>tag:developer.github.com,2016-07-12:/changes/2016-07-12-ending-multiple-assignees-preview-period/</id>
    <title type="html">Multiple Assignees API is now official</title>
    <published>2016-07-12T07:00:00Z</published>
    <updated>2016-07-12T07:00:00Z</updated>
    <author>
      <name>nakajima</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-07-12-ending-multiple-assignees-preview-period/"/>
    <content type="html">&lt;p&gt;We're making &lt;a href="/changes/2016-5-27-multiple-assignees/"&gt;Multiple Assignees&lt;/a&gt; part of the official GitHub API.&lt;/p&gt;

&lt;p&gt;During the preview period you needed to provide the &lt;code&gt;application/vnd.github.cerberus-preview&lt;/code&gt; preview media type in the &lt;code&gt;Accept&lt;/code&gt; header to opt-in to the changes. Now that the preview period has ended, you no longer need to specify this custom media type.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Multiple+Assignees+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-07-06:/changes/2016-07-06-github-pages-preiew-api/</id>
    <title type="html">Introducing the GitHub Pages preview API</title>
    <published>2016-07-06T07:00:00Z</published>
    <updated>2016-07-06T07:00:00Z</updated>
    <author>
      <name>benbalter</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-07-06-github-pages-preiew-api/"/>
    <content type="html">&lt;p&gt;We're introducing additional preview functionality to the &lt;a href="/v3/repos/pages/"&gt;GitHub Pages API&lt;/a&gt; to give developers better control over their GitHub Pages site.&lt;/p&gt;

&lt;h4&gt;
&lt;a id="requesting-a-page-build" class="anchor" href="#requesting-a-page-build" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Requesting a page build&lt;/h4&gt;

&lt;p&gt;You can now manually request a build of your GitHub Pages site without needing to push a new commit by making a &lt;code&gt;POST&lt;/code&gt; request to the endpoint already available to see past builds. For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/developer.github.com/pages/builds" \
  -X POST
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.mister-fantastic-preview" \
&lt;/pre&gt;

&lt;h4&gt;
&lt;a id="retrieving-a-sites-url" class="anchor" href="#retrieving-a-sites-url" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Retrieving a site's URL&lt;/h4&gt;

&lt;p&gt;With the introduction of &lt;a href="https://github.com/blog/2186-https-for-github-pages"&gt;HTTPS support for GitHub Pages sites&lt;/a&gt;, it's important to know not just a site's custom domain, if it has one, but also if it has HTTPS enforcement enabled. The GitHub Pages API will now return an additional &lt;code&gt;html_url&lt;/code&gt; field, which will include the computed absolute URL to the site.&lt;/p&gt;

&lt;p&gt;The resulting URL can be &lt;code&gt;https://username.github.io&lt;/code&gt; (or &lt;code&gt;http://username.github.io&lt;/code&gt;) for user sites without a custom domain, &lt;code&gt;https://username.gituhb.io/project&lt;/code&gt; for project sites, or &lt;code&gt;http://example.com&lt;/code&gt; for sites with custom domains, saving third-party applications the trouble of having to construct complicated URL logic based on the username, owner, and CNAME, as was previously necessary.&lt;/p&gt;

&lt;p&gt;For example, to request the HTML URL:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/developer.github.com/pages" \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.mister-fantastic-preview" \
&lt;/pre&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;To access this functionality during the preview period, you’ll need to provide the following custom media type in the Accept header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.mister-fantastic-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these API methods based on developer feedback. If we do, we will announce the changes here on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;For more information, take a look at &lt;a href="/v3/repos/pages/"&gt;the docs here&lt;/a&gt;, and if you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=GitHub+Pages+API+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-06-27:/changes/2016-06-27-protected-branches-api-update/</id>
    <title type="html">Update to Protected Branches API Preview</title>
    <published>2016-06-27T07:00:00Z</published>
    <updated>2016-06-27T07:00:00Z</updated>
    <author>
      <name>tma</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-06-27-protected-branches-api-update/"/>
    <content type="html">&lt;p&gt;Over the past few months, we've made a few &lt;a href="https://github.com/blog/2137-protected-branches-improvements"&gt;improvements&lt;/a&gt; to the way &lt;a href="https://github.com/blog/2051-protected-branches-and-required-status-checks"&gt;protected branches&lt;/a&gt; work in our web interface. Today, we're modifying the protected branches API &lt;a href="https://developer.github.com/changes/2015-11-11-protected-branches-api/"&gt;preview period&lt;/a&gt; to include these improvements.&lt;/p&gt;

&lt;p&gt;Included in these API changes is the ability to allow organizations to specify which members and teams should be able to push to a protected branch, as well as providing a new setting for required status checks which will remove the requirement of a pull request to be up to date before merging.&lt;/p&gt;

&lt;p&gt;You'll notice a new endpoint structure. One set of endpoints for modifying the branch settings as a whole (&lt;code&gt;PATCH /repos/:owner/:repo/branches/:branch&lt;/code&gt; has been updated to be &lt;code&gt;PUT /repos/:owner/:repo/branches/:branch/protection&lt;/code&gt;), and a series of more granular endpoints to modify a subset of the branch protection settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This will be a breaking change for the protected branch API.&lt;/strong&gt; The deprecated API endpoint will be removed when the protected branches API will leave the preview period. If you're trying out the old protected branches API, you'll need to update your code.&lt;/p&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;To access this functionality during the preview period, you’ll need to provide the following custom media type in the Accept header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.loki-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a look at &lt;a href="/v3/repos/branches/"&gt;the docs here&lt;/a&gt;. If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Protected+Branches+API+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-06-22:/changes/2016-06-22-issue-locking-api-is-now-official/</id>
    <title type="html">Issue locking and unlocking APIs are now official</title>
    <published>2016-06-22T07:00:00Z</published>
    <updated>2016-06-22T07:00:00Z</updated>
    <author>
      <name>davidcelis</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-06-22-issue-locking-api-is-now-official/"/>
    <content type="html">&lt;p&gt;We're making the &lt;a href="/changes/2016-02-11-issue-locking-api/"&gt;Issue locking and unlocking APIs&lt;/a&gt; part of the official GitHub API.&lt;/p&gt;

&lt;p&gt;During the preview period you needed to provide the &lt;code&gt;application/vnd.github.the-key-preview+json&lt;/code&gt; preview media type in the &lt;code&gt;Accept&lt;/code&gt; header to opt-in to the new endpoints. Now that the preview period has ended, you no longer need to specify this custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Issue+Locking+and+Unlocking+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-06-14:/changes/2016-06-14-repository-invitations/</id>
    <title type="html">API changes for Repository Invitations</title>
    <published>2016-06-14T07:00:00Z</published>
    <updated>2016-06-14T07:00:00Z</updated>
    <author>
      <name>CoralineAda</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-06-14-repository-invitations/"/>
    <content type="html">&lt;p&gt;We announced &lt;a href="https://github.com/blog/2170-repository-invitations"&gt;repository invitation functionality&lt;/a&gt; on May 23. Using the site, you can invite collaborators to work on your repository. Invitees will receive an email with the invitation and have the option to accept or decline.&lt;/p&gt;

&lt;p&gt;We have now have endpoints for managing repository invitations for both repository administrators and invitation recipients through the GitHub API. You can enable these changes during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.swamp-thing-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/hubot/invitations" \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.swamp-thing-preview"
&lt;/pre&gt;

&lt;p&gt;You can learn more about the new endpoints in the updated &lt;a href="/v3/repos/collaborators"&gt;Collaborators&lt;/a&gt; and new &lt;a href="/v3/repos/invitations"&gt;Repository Invitations&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Repository+Invitations+API+Preview"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-06-07:/changes/2016-06-07-reactions-api-update/</id>
    <title type="html">Reactions API Preview now includes user information</title>
    <published>2016-06-07T07:00:00Z</published>
    <updated>2016-06-07T07:00:00Z</updated>
    <author>
      <name>kneemer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-06-07-reactions-api-update/"/>
    <content type="html">&lt;p&gt;To avoid making extra API calls, we've updated the &lt;a href="/changes/2016-05-12-reactions-api-preview"&gt;Reactions API preview&lt;/a&gt; to include additional user information when listing Reactions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a breaking change for Reaction payloads&lt;/strong&gt;. If you're trying out this new API during its preview period, you'll need to update your code to continue working with it.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="json-payload-changes" class="anchor" href="#json-payload-changes" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;JSON Payload Changes&lt;/h2&gt;

&lt;p&gt;We're replacing the &lt;code&gt;user_id&lt;/code&gt; attribute with &lt;code&gt;user&lt;/code&gt; and changing the schema type from a number to a JSON object.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="example-reaction-json" class="anchor" href="#example-reaction-json" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Example Reaction JSON&lt;/h2&gt;

&lt;pre class="highlight highlight-json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"login"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"octocat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"avatar_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/images/error/octocat_happy.gif"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"gravatar_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"html_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/octocat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"followers_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/followers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"following_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/following{/other_user}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"gists_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/gists{/gist_id}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"starred_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/starred{/owner}{/repo}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"subscriptions_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/subscriptions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"organizations_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/orgs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"repos_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/repos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"events_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/events{/privacy}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"received_events_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://api.github.com/users/octocat/received_events"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"User"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"site_admin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"content"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"heart"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Reactions+API+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-05-27:/changes/2016-5-27-multiple-assignees/</id>
    <title type="html">API changes for Multiple Issue Assignees</title>
    <published>2016-05-27T07:00:00Z</published>
    <updated>2016-05-27T07:00:00Z</updated>
    <author>
      <name>nakajima</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-5-27-multiple-assignees/"/>
    <content type="html">&lt;p&gt;GitHub recently added the ability to assign up to ten people to issues. We're updating Issue payloads and adding a couple new endpoints to help you build apps. You can enable these changes during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.cerberus-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/hubot/issues" \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.cerberus-preview" \
&lt;/pre&gt;

&lt;p&gt;The issues returned in this list will include the new &lt;code&gt;assignees&lt;/code&gt; key.&lt;/p&gt;

&lt;p&gt;You can learn more about the new responses and endpoints in the updated &lt;a href="/v3/issues"&gt;Issues&lt;/a&gt; and &lt;a href="/v3/issues/assignees"&gt;Issue Assignees&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Multiple+Assignees+API"&gt;let us know&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-05-23:/changes/2016-05-23-timeline-preview-api/</id>
    <title type="html">Preview the Timeline API</title>
    <published>2016-05-23T07:00:00Z</published>
    <updated>2016-05-23T07:00:00Z</updated>
    <author>
      <name>nickh</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-05-23-timeline-preview-api/"/>
    <content type="html">&lt;p&gt;We've added an API for issue timelines, which will let you fetch a list
of events from an issue or pull request timeline.&lt;/p&gt;

&lt;p&gt;To access &lt;a href="/v3/issues/timeline/"&gt;the Timeline API&lt;/a&gt; during the preview period, you must provide a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.mockingbird-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these API methods based on developer feedback. If we do, we will announce the changes here on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Timeline+API"&gt;let us know&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-05-12:/changes/2016-05-12-reactions-api-preview/</id>
    <title type="html">Preview support for Reactions API</title>
    <published>2016-05-12T07:00:00Z</published>
    <updated>2016-05-12T07:00:00Z</updated>
    <author>
      <name>kneemer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-05-12-reactions-api-preview/"/>
    <content type="html">&lt;p&gt;GitHub recently added &lt;a href="https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments"&gt;Reactions to Pull Requests, Issues, and Comments&lt;/a&gt; to help people express their feelings more simply and effectively in conversations. We are adding endpoints for Reactions so that you can now react and unreact via the API. You can enable these changes during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.squirrel-girl-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;To view reactions on an issue:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl "https://api.github.com/repos/github/hubot/issues/1/reactions" \&lt;/span&gt;
  -H "Accept: application/vnd.github.squirrel-girl-preview"
&lt;/pre&gt;

&lt;p&gt;You can learn more about the new reaction response objects in the updated &lt;a href="/v3/repos/comments#preview-period-commits-comments"&gt;Commit comment&lt;/a&gt;, &lt;a href="/v3/issues#preview-period-org-issues"&gt;Issue&lt;/a&gt;, &lt;a href="/v3/issues/comments#preview-period-issue-comments"&gt;Issue comment&lt;/a&gt;, and &lt;a href="/v3/pulls/comments#preview-period-pull-comments"&gt;Review Comment&lt;/a&gt; documentation. There is also new &lt;a href="/v3/reactions"&gt;Reaction&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;During the preview period, we may change aspects of these APIs based on developer feedback. We will announce the changes here on the developer blog, but we will not provide advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Reactions+API+Preview"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-05-03:/changes/2016-05-03-source-import-api-enhancements-for-working-with-git-lfs/</id>
    <title type="html">Source Import API enhancements for working with Git LFS</title>
    <published>2016-05-03T07:00:00Z</published>
    <updated>2016-05-03T07:00:00Z</updated>
    <author>
      <name>lizzhale</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-05-03-source-import-api-enhancements-for-working-with-git-lfs/"/>
    <content type="html">&lt;p&gt;Today we're introducing enhancements to the &lt;a href="/v3/migration/source_imports/"&gt;Source Import API&lt;/a&gt; to support importing repositories with files larger than 100MB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Changes to parameters for starting an import&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="/v3/migration/source_imports/#start-an-import"&gt;Starting an import&lt;/a&gt; no longer requires a &lt;code&gt;vcs&lt;/code&gt; parameter. Please be aware that without this parameter, the import job will take additional time to detect the vcs type before beginning the import. This detection step will be reflected in the response.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We've added 3 new methods that will enable API consumers to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="/v3/migration/source_imports/#update-existing-import"&gt;update&lt;/a&gt; the authentication or project choice for an import. If no parameters are provided during the request, the import will be restarted. Please note that this is a &lt;strong&gt;breaking change&lt;/strong&gt;. Updating authentication for the originating URL is no longer supported through the &lt;a href="/v3/migration/source_imports/#start-an-import"&gt;start an import&lt;/a&gt; method. Please update your applications to use the new method.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="/v3/migration/source_imports/#set-git-lfs-preference"&gt;set their preference&lt;/a&gt; for using Git LFS to import files larger than 100MB.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="/v3/migration/source_imports/#get-large-files"&gt;list all the files larger than 100MB&lt;/a&gt; that were found during the import.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;New attributes for Git LFS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Several new response attributes (&lt;code&gt;use_lfs&lt;/code&gt;, &lt;code&gt;has_large_files&lt;/code&gt;, &lt;code&gt;large_files_size&lt;/code&gt;, &lt;code&gt;large_files&lt;/code&gt;) were added to provide details regarding the large files found during the import. You can read more about the attributes &lt;a href="/v3/migration/source_imports/#git-lfs-related-fields"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As before, to access the API during the preview period, you must provide a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.barred-rock-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information, see the &lt;a href="/v3/migration/source_imports/"&gt;Source Import API documentation&lt;/a&gt;, and if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Source+Import+API"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-21:/changes/2016-04-21-oauth-authorizations-grants-api-preview/</id>
    <title type="html">Preview support for OAuth authorizations grants API</title>
    <published>2016-04-21T07:00:00Z</published>
    <updated>2016-04-21T07:00:00Z</updated>
    <author>
      <name>ptoomey3</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-21-oauth-authorizations-grants-api-preview/"/>
    <content type="html">&lt;p&gt;GitHub recently made changes to &lt;a href="https://github.com/settings/applications#authorized"&gt;the application authorizations settings screen within GitHub&lt;/a&gt; to display one entry for each OAuth application a user has authorized. Previously this screen showed one entry for each OAuth token that was generated by an OAuth application. For example, if you installed two instances of GitHub Desktop, you would see one entry for each installation. To simplify OAuth application management, we now show a single entry for each OAuth application. For OAuth applications that use the &lt;a href="/v3/oauth/#web-application-flow"&gt;web flow&lt;/a&gt; this was not a problem, since the web flow never generates more than one token for a given OAuth application and user. However, going forward, GitHub would like to allow all OAuth applications, including those that use the web flow, to generate more than one token.&lt;/p&gt;

&lt;p&gt;In preparation for that change, we are adding API support to simplify management of OAuth applications that matches what is available on GitHub.com. You can enable these changes during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.damage-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl -u username "https://api.github.com/applications/grants" \
  -H "Accept: application/vnd.github.damage-preview"
&lt;/pre&gt;

&lt;p&gt;You can learn more about the new APIs in the &lt;a href="/v3/oauth_authorizations"&gt;OAuth authorizations&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;During the preview period, we may change aspects of these APIs based on developer feedback. We will announce the changes here on the developer blog, but we will not provide advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=OAuth+Authorizations+Grants+API+Preview"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-18:/changes/2016-04-18-new-webhook-actions-are-live/</id>
    <title type="html">New webhook event actions are now live</title>
    <published>2016-04-18T07:00:00Z</published>
    <updated>2016-04-18T07:00:00Z</updated>
    <author>
      <name>davidcelis</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-18-new-webhook-actions-are-live/"/>
    <content type="html">&lt;p&gt;As &lt;a href="https://developer.github.com/changes/2016-03-15-new-webhook-actions/"&gt;promised last month&lt;/a&gt;, we've expanded several webhook events with new functionality. Webhook events involving repositories, issues, and comments have all been updated to include new actions.&lt;/p&gt;

&lt;p&gt;Repository events will now fire when a repository is deleted, made public, or made private. In addition, while repository creation events will still only fire for organizations, the new repository event actions can be delivered for user-owned repositories.&lt;/p&gt;

&lt;p&gt;Events for issues, pull requests, and comments have also been updated and will now fire when these objects are edited or deleted. When an issue, pull request, or a comment has been edited, the event's payload will include a "changes" object. For example, if you've updated the title and body of an issue, the webhook payload informs you of what the issue used to look like:&lt;/p&gt;

&lt;pre class="highlight highlight-json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"edited"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"changes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"from"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This is the old title."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;"from"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This is the old body."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"issue"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This is the new title."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This is the new body."&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The new values will be present in the &lt;code&gt;issue&lt;/code&gt; object itself, as detailed above. Unchanged values will not be present within the &lt;code&gt;changes&lt;/code&gt; object. Comment edits follow a similar pattern, though because they have no titles, the only change included in the payload would be the comment's body.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="list-of-comprehensive-changes" class="anchor" href="#list-of-comprehensive-changes" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;List of comprehensive changes&lt;/h2&gt;

&lt;p&gt;New actions were added to five events, all of which are detailed below.&lt;/p&gt;

&lt;h3&gt;
&lt;a id="repositoryevent" class="anchor" href="#repositoryevent" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/activity/events/types/#repositoryevent"&gt;RepositoryEvent&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;deleted&lt;/code&gt;: sent when a user-owned or organization-owned repository is deleted.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publicized&lt;/code&gt;: sent when a user-owned or organization-owned repository is switched from private to public.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;privatized&lt;/code&gt;: sent when a user-owned or organization-owned repository is switched from public to private.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="issuesevent" class="anchor" href="#issuesevent" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/activity/events/types/#issuesevent"&gt;IssuesEvent&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;edited&lt;/code&gt;: sent when the title and/or body of an issue is edited.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="issuecommentevent" class="anchor" href="#issuecommentevent" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/activity/events/types/#issuecommentevent"&gt;IssueCommentEvent&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;edited&lt;/code&gt;: sent when a comment on an issue or pull request is edited&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;deleted&lt;/code&gt;: sent when a comment on an issue or pull request is deleted&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="pullrequestevent" class="anchor" href="#pullrequestevent" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/activity/events/types/#pullrequestevent"&gt;PullRequestEvent&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;edited&lt;/code&gt;: sent when the title and/or body of a pull request is edited.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="pullrequestreviewcommentevent" class="anchor" href="#pullrequestreviewcommentevent" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent"&gt;PullRequestReviewCommentEvent&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;edited&lt;/code&gt;: sent when a comment on a pull request's unified diff (in the Files Changed tab) is edited&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;deleted&lt;/code&gt;: sent when a comment on a pull request's unified diff (in the Files Changed tab) is deleted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Take a look at &lt;a href="https://developer.github.com/webhooks/"&gt;the documentation&lt;/a&gt; for full details. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Webhook+Actions"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-12:/changes/2016-04-12-commit-reference-sha-api-is-now-official/</id>
    <title type="html">Commit Reference SHA-1 API is now official</title>
    <published>2016-04-12T07:00:00Z</published>
    <updated>2016-04-12T07:00:00Z</updated>
    <author>
      <name>mikemcquaid</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-12-commit-reference-sha-api-is-now-official/"/>
    <content type="html">&lt;p&gt;We're making the &lt;a href="/changes/2016-02-24-commit-reference-sha-api/"&gt;Commit Reference SHA-1 API&lt;/a&gt; part of the official GitHub API.&lt;/p&gt;

&lt;p&gt;During the preview period you needed to provide the &lt;code&gt;application/vnd.github.chitauri-preview+sha&lt;/code&gt; preview media type in the &lt;code&gt;Accept&lt;/code&gt; header to opt-in to the changes. Now that the preview period has ended the custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt; has changed to &lt;code&gt;application/vnd.github.v3.sha&lt;/code&gt; (but the preview type will continue to work).&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Commit+Reference+SHA-1+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-06:/changes/2016-04-06-deployment-and-deployment-status-enhancements/</id>
    <title type="html">Deployment and DeploymentStatus API enhancements preview period</title>
    <published>2016-04-06T07:00:00Z</published>
    <updated>2016-04-06T07:00:00Z</updated>
    <author>
      <name>tarebyte</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements/"/>
    <content type="html">&lt;p&gt;We've expanded our Deployments APIs to accommodate more powerful deployment practices and to lay the foundation for a more seamless integration of deployments within GitHub.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="link-to-a-live-deployment" class="anchor" href="#link-to-a-live-deployment" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Link to a live deployment&lt;/h2&gt;

&lt;p&gt;To enable easy access to a live version of a deployment, we've added an &lt;code&gt;environment_url&lt;/code&gt; field to the Deployments API. This environment will be exposed as a link in the Pull Request timeline to enable users to directly access a running version of their code without leaving the context of their work.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: To add some clarity, we've renamed the &lt;code&gt;target_url&lt;/code&gt; field to &lt;code&gt;log_url&lt;/code&gt;. We will continue accept &lt;code&gt;target_url&lt;/code&gt; to support legacy uses, but we recommend modifying this to the new name to avoid confusion. Future API versions might not support &lt;code&gt;target_url&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="inactive-deployment-status" class="anchor" href="#inactive-deployment-status" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Inactive deployment status&lt;/h2&gt;

&lt;p&gt;We recognize that deployments in many common practices don't last forever. So, we've added a new &lt;code&gt;inactive&lt;/code&gt; state to Deployment Statuses. You can use this state to communicate that a deployment is no longer active (e.g. something different has been deployed to the environment or the environment has been destroyed).&lt;/p&gt;

&lt;h2&gt;
&lt;a id="more-information-about-environments" class="anchor" href="#more-information-about-environments" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;More information about environments&lt;/h2&gt;

&lt;p&gt;We've expanded our Deployments API to provide additional information about the environments associated with deployments.&lt;/p&gt;

&lt;p&gt;We've added a new &lt;code&gt;transient_environment&lt;/code&gt; field to allow you to communicate that an environment is specific to a deployment and will no longer exist at some point in the future (e.g. a temporary testing environment like a &lt;a href="https://devcenter.heroku.com/articles/github-integration-review-apps"&gt;Heroku Review App&lt;/a&gt;). By pairing this with other additions, we can determine that an &lt;code&gt;inactive&lt;/code&gt; deployment associated with a &lt;code&gt;transient_environment&lt;/code&gt; has an &lt;code&gt;environment_url&lt;/code&gt; that is no longer accessible.&lt;/p&gt;

&lt;p&gt;Similarly, we've added a new &lt;code&gt;production_environment&lt;/code&gt; field to allow you to communicate that an environment is one with which end users directly interact. We automatically set &lt;code&gt;production_environment&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; if the value for &lt;code&gt;environment&lt;/code&gt; is &lt;code&gt;"production"&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="automatic-creation-of-inactive-statuses" class="anchor" href="#automatic-creation-of-inactive-statuses" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Automatic creation of inactive statuses&lt;/h2&gt;

&lt;p&gt;Each time we receive a new successful deployment status, we automatically add a new &lt;code&gt;inactive&lt;/code&gt; status to all previous deployments made within the relevant repository to the same environment (based on the value of &lt;code&gt;environment&lt;/code&gt;) given the environment is both non-transient and non-production. You can opt out of this behavior by passing &lt;code&gt;false&lt;/code&gt; with the new &lt;code&gt;auto_inactive&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;For example, if &lt;code&gt;feature-branch&lt;/code&gt; within &lt;code&gt;https://github.com/user/repository&lt;/code&gt; is deployed to an environment named &lt;code&gt;staging&lt;/code&gt; (which is a non-transient, non-production environment) and &lt;code&gt;bugfix-branch&lt;/code&gt; within &lt;code&gt;https://github.com/user/repository&lt;/code&gt; is later deployed to an environment named &lt;code&gt;staging&lt;/code&gt;, we would automatically create a new &lt;code&gt;inactive&lt;/code&gt; status for the deployment associated with &lt;code&gt;feature-branch&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;Starting today, these API enhancements are available for developers to preview. At the end of the preview period, these enhancements will become official components of the GitHub API.&lt;/p&gt;

&lt;p&gt;To access the API during the preview period, you must provide a custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt; in the Accept header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.ant-man-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these enhancements. If we do, we will announce the changes on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href="https://developer.github.com/v3/repos/deployments/"&gt;the documentation&lt;/a&gt; for full details. We would love to hear your thoughts on these enhancements. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployment+and+DeploymentStatus+API+enhancements+preview+period"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-04:/changes/2016-04-04-git-signing-api-preview/</id>
    <title type="html">Preview support for Git signing</title>
    <published>2016-04-04T07:00:00Z</published>
    <updated>2016-04-04T07:00:00Z</updated>
    <author>
      <name>mastahyeti</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-04-git-signing-api-preview/"/>
    <content type="html">&lt;p&gt;GitHub &lt;a href="https://github.com/blog/2144-gpg-signature-verification"&gt;recently started verifying GPG signed commits and tags&lt;/a&gt;. We are adding API support for signature verification and user GPG key management as well. You can enable these changes during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.cryptographer-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/user/gpg_keys" \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.cryptographer-preview" \
&lt;/pre&gt;

&lt;p&gt;You can learn more about the new signature verification response objects in the updated &lt;a href="/v3/repos/commits"&gt;repository commit&lt;/a&gt;, &lt;a href="/v3/git/commits"&gt;Git commit&lt;/a&gt;, and &lt;a href="/v3/git/tags"&gt;Git tag&lt;/a&gt; documentation. There is also new &lt;a href="/v3/users/gpg_keys"&gt;GPG key management&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;During the preview period, we may change aspects of these APIs based on developer feedback. We will announce the changes here on the developer blog, but we will not provide advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Squash+API+Preview"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-04-01:/changes/2016-04-01-squash-api-preview/</id>
    <title type="html">Preview Squash Support for the Pull Request Merge API</title>
    <published>2016-04-01T07:00:00Z</published>
    <updated>2016-04-01T07:00:00Z</updated>
    <author>
      <name>scottjg</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-04-01-squash-api-preview/"/>
    <content type="html">&lt;p&gt;With the &lt;a href="https://github.com/blog/2141-squash-your-commits"&gt;recent addition&lt;/a&gt; of squashing Pull Requests via the merge button, we're adding support to squash Pull Requests in the API as well. You can squash a pull request in the &lt;a href="/v3/pulls/#merge-a-pull-request-merge-button"&gt;Pull Request Merge API&lt;/a&gt; during the preview period by providing a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.polaris-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/hubot/pulls/123/merge" \
  -XPUT \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.polaris-preview" \
  -d '{
    "squash": true,
    "commit_title": "Never tell me the odds"
  }'
&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these API methods based on developer feedback. We will announce the changes here on the developer blog, but we will not provide advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Squash+API+Preview"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-03-17:/changes/2016-03-17-the-451-status-code-is-now-supported/</id>
    <title type="html">The 451 status code is now supported</title>
    <published>2016-03-17T07:00:00Z</published>
    <updated>2016-03-17T07:00:00Z</updated>
    <author>
      <name>gjtorikian</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-03-17-the-451-status-code-is-now-supported/"/>
    <content type="html">&lt;p&gt;In December 2015, &lt;a href="https://datatracker.ietf.org/doc/rfc7725/"&gt;the IETF ratified status code &lt;code&gt;451&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;451&lt;/code&gt; response indicates that a resource is unavailable due to an external legal request.&lt;/p&gt;

&lt;p&gt;The GitHub API will now respond with a &lt;code&gt;451&lt;/code&gt; status code for resources it has been asked to take down due to a DMCA notice. For example:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl https://api.github.com/repos/github/a-repository-that-s-been-taken-down&lt;/span&gt;
&lt;span class="output"&gt;HTTP/1.1 451&lt;/span&gt;
&lt;span class="output"&gt;Server: GitHub.com&lt;/span&gt;

&lt;span class="output"&gt;{&lt;/span&gt;
&lt;span class="output"&gt; "message": "Repository access blocked",&lt;/span&gt;
&lt;span class="output"&gt; "block": {&lt;/span&gt;
&lt;span class="output"&gt;   "reason": "dmca",&lt;/span&gt;
&lt;span class="output"&gt;   "created_at": "2016-03-17T15:39:46-07:00"&lt;/span&gt;
&lt;span class="output"&gt; }&lt;/span&gt;
&lt;span class="output"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;This &lt;code&gt;451&lt;/code&gt; code will be returned for repositories and gists. Previously, the API responded with a &lt;code&gt;403 - Forbidden&lt;/code&gt;. Aside from the semantic difference, we feel that it's important for users to know precisely why their data cannot be served.&lt;/p&gt;

&lt;p&gt;If you're receiving a &lt;code&gt;451&lt;/code&gt; due to a DMCA takedown, please read our article on &lt;a href="https://help.github.com/articles/guide-to-submitting-a-dmca-counter-notice/"&gt;submitting a DMCA counter notice&lt;/a&gt; and know your rights. For more information, see &lt;a href="https://help.github.com/articles/dmca-takedown-policy/"&gt;GitHub's DMCA Takedown Policy&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-03-15:/changes/2016-03-15-new-webhook-actions/</id>
    <title type="html">New webhook event actions are coming</title>
    <published>2016-03-15T07:00:00Z</published>
    <updated>2016-03-15T07:00:00Z</updated>
    <author>
      <name>davidcelis</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-03-15-new-webhook-actions/"/>
    <content type="html">&lt;p&gt;We will soon begin introducing new &lt;code&gt;action&lt;/code&gt; values for several existing webhook events. If you currently subscribe to webhooks but do not check the payload's &lt;code&gt;action&lt;/code&gt; value, you may end up incorrectly processing events after this change is released. To ensure that your webhook processing is not affected by these new &lt;code&gt;action&lt;/code&gt; values, &lt;strong&gt;you should audit your webhook processing logic by April 15th, 2016&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We are providing an advance notice to warn of these changes. In the future, we may continue adding new actions without providing further warning.&lt;/p&gt;

&lt;h3&gt;
&lt;a id="a-brief-overview-of-github-webhook-actions" class="anchor" href="#a-brief-overview-of-github-webhook-actions" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;A brief overview of GitHub webhook actions&lt;/h3&gt;

&lt;p&gt;Webhook events can have multiple actions. For example, the &lt;a href="https://developer.github.com/v3/activity/events/types/#issuesevent"&gt;&lt;code&gt;IssuesEvent&lt;/code&gt;&lt;/a&gt; has several possible actions. These include &lt;code&gt;opened&lt;/code&gt; when the issue is created, &lt;code&gt;closed&lt;/code&gt; when the issue is closed, and &lt;code&gt;assigned&lt;/code&gt; when the issue is assigned to someone. Historically, we haven't added new actions to webhook events that have only one action. However, as GitHub's feature set grows, we may occasionally add new actions to existing event types. We encourage you to take some time and ensure that your application explicitly checks the action before doing any processing.&lt;/p&gt;

&lt;h3&gt;
&lt;a id="what-to-avoid-when-working-with-event-actions" class="anchor" href="#what-to-avoid-when-working-with-event-actions" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What to avoid when working with event actions&lt;/h3&gt;

&lt;p&gt;Here's an example of functionality that &lt;strong&gt;will not work&lt;/strong&gt; when attempting to process an &lt;code&gt;IssuesEvent&lt;/code&gt;. In this example, the &lt;code&gt;process_closed&lt;/code&gt; method will be called for any event action which is not &lt;code&gt;opened&lt;/code&gt; or &lt;code&gt;assigned&lt;/code&gt;. This means that the &lt;code&gt;process_closed&lt;/code&gt; method will be called for events with the &lt;code&gt;closed&lt;/code&gt; action, but also other events with actions other than &lt;code&gt;opened&lt;/code&gt; or &lt;code&gt;assigned&lt;/code&gt; that are delivered to the webhook.&lt;/p&gt;

&lt;pre class="highlight highlight-ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# The following is not future-proof!&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"opened"&lt;/span&gt;
  &lt;span class="n"&gt;process_opened&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"assigned"&lt;/span&gt;
  &lt;span class="n"&gt;process_assigned&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="n"&gt;process_closed&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;
&lt;a id="how-to-work-with-new-event-actions" class="anchor" href="#how-to-work-with-new-event-actions" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How to work with new event actions&lt;/h3&gt;

&lt;p&gt;We suggest that you explicitly check event actions and act accordingly. In this example, the &lt;code&gt;closed&lt;/code&gt; action is checked first before calling the &lt;code&gt;process_closed&lt;/code&gt; method. Additionally, for unknown actions, we log that something new was encountered:&lt;/p&gt;

&lt;pre class="highlight highlight-ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# The following is recommended&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"opened"&lt;/span&gt;
  &lt;span class="n"&gt;process_opened&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"assigned"&lt;/span&gt;
  &lt;span class="n"&gt;process_assigned&lt;/span&gt;
&lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s2"&gt;"closed"&lt;/span&gt;
  &lt;span class="n"&gt;process_closed&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Ooohh, something new from GitHub!"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;We may also add new webhook event types from time to time. If your webhook is configured to "Send me &lt;strong&gt;everything&lt;/strong&gt;", your code should also explicitly check for the event type in a similar way as we have done with checking for the action type above. Take a look at our &lt;a href="https://developer.github.com/guides/best-practices-for-integrators/"&gt;integrators best practices guide&lt;/a&gt; for more tips.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Webhook+Actions"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-02-24:/changes/2016-02-24-commit-reference-sha-api/</id>
    <title type="html">Commit Reference SHA-1 Preview Period</title>
    <published>2016-02-24T08:00:00Z</published>
    <updated>2016-02-24T08:00:00Z</updated>
    <author>
      <name>mikemcquaid</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-02-24-commit-reference-sha-api/"/>
    <content type="html">&lt;p&gt;We're introducing a new API media type to allow users to get the SHA-1 of a commit reference. This can be useful in working out if you have the latest version of a remote branch based on your local branch's SHA-1. Developers with read access to a repository can start experimenting with this new media type today during the preview period.&lt;/p&gt;

&lt;p&gt;To get the commit reference's SHA-1, make a &lt;code&gt;GET&lt;/code&gt; request to the repository's reference:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl "https://api.github.com/repos/Homebrew/homebrew/commits/master" \&lt;/span&gt;
  -H "Accept: application/vnd.github.chitauri-preview+sha"
&lt;/pre&gt;

&lt;p&gt;To check if a remote branch's SHA-1 is the same as your local branch's SHA-1, make a &lt;code&gt;GET&lt;/code&gt; request to the repository's branch and provide the current SHA-1 for the local branch as the ETag:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl "https://api.github.com/repos/Homebrew/homebrew/commits/master" \&lt;/span&gt;
  -H "Accept: application/vnd.github.chitauri-preview+sha" \
  -H "If-None-Match: \"814412cfbd631109df337e16c807207e78c0d24e\""
&lt;/pre&gt;

&lt;p&gt;If the remote and your local branch point to the same SHA-1 then this call will return a &lt;code&gt;304 Unmodified&lt;/code&gt; status code (and not use your rate limit).&lt;/p&gt;

&lt;p&gt;You can see an example of this API in a pull request to Homebrew/homebrew's updater: &lt;a href="https://github.com/Homebrew/homebrew/pull/49219"&gt;https://github.com/Homebrew/homebrew/pull/49219&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;To use this new API media type during the preview period, you’ll need to provide the following custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.chitauri-preview+sha
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of this API media type based on developer feedback. If we do, we will announce the changes here on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href="/v3/repos/commits/#get-the-sha-1-of-a-commit-reference"&gt;the documentation&lt;/a&gt; and, if you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Commit+Reference+SHA-1+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-02-19:/changes/2016-02-19-source-import-preview-api/</id>
    <title type="html">Preview the Source Import API</title>
    <published>2016-02-19T08:00:00Z</published>
    <updated>2016-02-19T08:00:00Z</updated>
    <author>
      <name>spraints</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-02-19-source-import-preview-api/"/>
    <content type="html">&lt;p&gt;We've added an API for source imports, which will let you start an import from a Git, Subversion, Mercurial, or Team Foundation Server source repository. This is the same functionality as &lt;a href="https://help.github.com/articles/importing-from-other-version-control-systems-to-github/"&gt;the GitHub Importer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To access &lt;a href="/v3/migration/source_imports/"&gt;the Source Import API&lt;/a&gt; during the preview period, you must provide a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.barred-rock-preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these API methods based on developer feedback. If we do, we will announce the changes here on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Source+Import+API"&gt;let us know&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-02-11:/changes/2016-02-11-issue-locking-api/</id>
    <title type="html">Issue Locking and Unlocking API Preview Period</title>
    <published>2016-02-11T08:00:00Z</published>
    <updated>2016-02-11T08:00:00Z</updated>
    <author>
      <name>davidcelis</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-02-11-issue-locking-api/"/>
    <content type="html">&lt;p&gt;We're introducing new API methods to allow repository collaborators to &lt;a href="https://help.github.com/articles/locking-conversations/"&gt;lock and unlock conversations&lt;/a&gt;. Developers with &lt;a href="https://help.github.com/articles/what-are-the-different-access-permissions/"&gt;collaborator permissions&lt;/a&gt; on a repository can start experimenting with these new endpoints today during the preview period.&lt;/p&gt;

&lt;p&gt;To lock a conversation, make a &lt;code&gt;PUT&lt;/code&gt; request to the conversation's issue:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl "https://api.github.com/repos/github/hubot/issues/1/lock" \&lt;/span&gt;
  -X PUT \
  -H "Authorization: token $TOKEN" \
  -H "Content-Length: 0" \
  -H "Accept: application/vnd.github.the-key-preview"
&lt;/pre&gt;

&lt;p&gt;To unlock a conversation, make a similarly constructed &lt;code&gt;DELETE&lt;/code&gt; request:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl "https://api.github.com/repos/github/hubot/issues/1/lock" \&lt;/span&gt;
  -X DELETE \
  -H "Authorization: token $TOKEN" \
  -H "Accept: application/vnd.github.the-key-preview"
&lt;/pre&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;Starting today, developers can preview these new API methods. To use them during the preview period, you’ll need to provide the following custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.the-key-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these API methods based on developer feedback. If we do, we will announce the changes here on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href="/v3/issues/#lock-an-issue"&gt;the documentation&lt;/a&gt; and, if you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Issue+Locking+and+Unlocking+API+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2016-01-05:/changes/2016-01-05-api-enhancements-for-working-with-organization-permissions-are-now-official/</id>
    <title type="html">API enhancements for working with organization permissions are now official</title>
    <published>2016-01-05T08:00:00Z</published>
    <updated>2016-01-05T08:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2016-01-05-api-enhancements-for-working-with-organization-permissions-are-now-official/"/>
    <content type="html">&lt;p&gt;To allow API developers to take advantage of the &lt;a href="https://github.com/blog/2064-new-organization-permissions-now-available"&gt;improved organization permissions&lt;/a&gt; that launched in September 2015, we're making the &lt;a href="/changes/2015-06-24-api-enhancements-for-working-with-organization-permissions/"&gt;API enhancements&lt;/a&gt; for working with organization permissions a part of the official GitHub API.&lt;/p&gt;

&lt;p&gt;During the preview period, you needed to &lt;a href="/changes/2015-06-24-api-enhancements-for-working-with-organization-permissions/#preview-period"&gt;provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header&lt;/a&gt; to opt-in to the changes. Now that the preview period has ended, you no longer need to specify this custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Organization+Permissions+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-11-11:/changes/2015-11-11-protected-branches-api/</id>
    <title type="html">Protected Branches API Preview Period</title>
    <published>2015-11-11T08:00:00Z</published>
    <updated>2015-11-11T08:00:00Z</updated>
    <author>
      <name>nakajima</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-11-11-protected-branches-api/"/>
    <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE (2016-06-27):&lt;/strong&gt; As &lt;a href="/changes/2016-06-27-protected-branches-api-update/"&gt;announced&lt;/a&gt;, there is an extended version of the protected branches API available. This older version will be removed once the new one becomes official.&lt;/p&gt;

&lt;p&gt;We're starting a preview period for the &lt;a href="https://github.com/blog/2051-protected-branches-and-required-status-checks"&gt;protected branches&lt;/a&gt; API. Protecting a branch prevents force-pushes to it as well as deleting it. You can also specify required status checks that are required to merge code into the branch.&lt;/p&gt;

&lt;p&gt;To protect a branch, make a &lt;code&gt;PATCH&lt;/code&gt; request to the URL of the branch:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl "https://api.github.com/repos/github/hubot/branches/master" \
  -XPATCH \
  -H 'Authorization: token TOKEN' \
  -H "Accept: application/vnd.github.loki-preview" \
  -d '{
    "protection": {
      "enabled": true,
      "required_status_checks": {
        "enforcement_level": "everyone",
        "contexts": [
          "required-status"
        ]
      }
    }
  }'
&lt;/pre&gt;

&lt;h4&gt;
&lt;a id="how-can-i-try-it" class="anchor" href="#how-can-i-try-it" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;How can I try it?&lt;/h4&gt;

&lt;p&gt;To access this functionality during the preview period, you’ll need to provide the following custom media type in the Accept header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.loki-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a look at &lt;a href="/v3/repos/branches/"&gt;the docs here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Protected+Branches+API+Preview"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-09-03:/changes/2015-09-03-ensure-your-app-is-ready-for-protected-branches/</id>
    <title type="html">Ensure your app is ready for Protected Branches</title>
    <published>2015-09-03T07:00:00Z</published>
    <updated>2015-09-03T07:00:00Z</updated>
    <author>
      <name>aroben</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-09-03-ensure-your-app-is-ready-for-protected-branches/"/>
    <content type="html">&lt;p&gt;We’ve begun to &lt;a href="https://github.com/blog/2051-protected-branches-and-required-status-checks"&gt;roll out Protected Branches&lt;/a&gt; across GitHub. When you
protect a branch in one of your repositories, you will be prevented from
force pushing to that branch or deleting it. You can also configure required
status checks for your protected branch. When configured, changing a branch to
point at a new commit will fail unless that commit (or another commit with
the same &lt;a href="http://git-scm.com/book/en/v2/Git-Internals-Git-Objects#Tree-Objects"&gt;Git tree&lt;/a&gt;) has a &lt;a href="/v3/repos/statuses/"&gt;Status&lt;/a&gt; in the &lt;code&gt;success&lt;/code&gt; state for
each required status check.&lt;/p&gt;

&lt;p&gt;These restrictions apply to branch manipulations performed via the GitHub API
as well. So when you protect a branch, you will no longer be able to &lt;a href="/v3/git/refs/#delete-a-reference"&gt;delete
the branch&lt;/a&gt; via the API or &lt;a href="/v3/git/refs/#update-a-reference"&gt;update it&lt;/a&gt; to point at a
non-ancestor commit, even with &lt;code&gt;"force": true&lt;/code&gt;. And if your branch has required
status checks, you won’t be able to &lt;a href="/v3/git/refs/#update-a-reference"&gt;update it&lt;/a&gt; or &lt;a href="/v3/pulls/#merge-a-pull-request-merge-button"&gt;merge pull
requests&lt;/a&gt; into that branch until &lt;code&gt;success&lt;/code&gt; Statuses have been posted to
the target commit for all required status checks.&lt;/p&gt;

&lt;p&gt;These restrictions are all represented by 422 errors:&lt;/p&gt;

&lt;pre class="command-line"&gt;
&lt;span class="command"&gt;curl -i -H 'Authorization: token TOKEN' \&lt;/span&gt;
&lt;span class="command"&gt;   -X DELETE https://api.github.com/repos/octocat/hubot/git/refs/heads/master&lt;/span&gt;

&lt;span class="output"&gt;HTTP/1.1 422 Unprocessable Entity&lt;/span&gt;
&lt;span class="output"&gt;{&lt;/span&gt;
&lt;span class="output"&gt; "message": "Cannot delete a protected branch",&lt;/span&gt;
&lt;span class="output"&gt; "documentation_url": "https://help.github.com/articles/about-protected-branches"&lt;/span&gt;
&lt;span class="output"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Protected branches and required status checks are a great way to ensure your
project’s conventions are followed. For example, you could write a Status
integration that only posts a &lt;code&gt;success&lt;/code&gt; Status when the pull request’s author
has signed your project’s Contributor License Agreement. Or you could write one
that only posts a &lt;code&gt;success&lt;/code&gt; Status when three or more members of your
&lt;code&gt;@initech/senior-engineers&lt;/code&gt; team have left a comment saying they’ve reviewed
the changes. If you configure these integrations as required status checks, you
can be sure that these conditions have been satisfied before a pull request is
merged. See our &lt;a href="/guides/building-a-ci-server/"&gt;Status API guide&lt;/a&gt; to learn how to create integrations
like these.&lt;/p&gt;

&lt;p&gt;If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Protected+Branches+in+API+responses"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-08-04:/changes/2015-08-04-get-license-contents/</id>
    <title type="html">Get the contents of a repository’s license</title>
    <published>2015-08-04T07:00:00Z</published>
    <updated>2015-08-04T07:00:00Z</updated>
    <author>
      <name>benbalter</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-08-04-get-license-contents/"/>
    <content type="html">&lt;p&gt;The &lt;a href="/v3/licenses/"&gt;License API Preview&lt;/a&gt; now allows you to retrieve the contents of a repository's open source license. As before, when the appropriate preview media type is passed, the repository endpoint will return information about the detected license, if any:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl -H "Accept: application/vnd.github.drax-preview+json" https://api.github.com/repos/benbalter/gman
&lt;/pre&gt;

&lt;p&gt;You can now also get the contents of the repository's license file, whether or not the license was successfully identified via the license contents endpoint:&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl -H "Accept: application/vnd.github.drax-preview+json" https://api.github.com/repos/benbalter/gman/license
&lt;/pre&gt;

&lt;p&gt;Similar to &lt;a href="/v3/repos/contents/#get-contents"&gt;the repository contents API&lt;/a&gt;, the license contents method also supports &lt;a href="/v3/repos/contents/#custom-media-types"&gt;custom media types&lt;/a&gt; for retrieving the raw license content or rendered license HTML.&lt;/p&gt;

&lt;pre class="command-line"&gt;
curl -H "Accept: application/vnd.github.drax-preview.raw" https://api.github.com/repos/benbalter/gman/license
&lt;/pre&gt;

&lt;p&gt;For more information, see &lt;a href="/v3/licenses/#get-the-contents-of-a-repositorys-license"&gt;the license API documentation&lt;/a&gt;, and as always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=License+API"&gt;get in touch with us&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-07-22:/changes/2015-07-22-more-flexible-options-for-listing-repositories/</id>
    <title type="html">More flexible options for listing repositories</title>
    <published>2015-07-22T07:00:00Z</published>
    <updated>2015-07-22T07:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-07-22-more-flexible-options-for-listing-repositories/"/>
    <content type="html">&lt;p&gt;The &lt;a href="/v3/repos/#list-your-repositories"&gt;List your repositories&lt;/a&gt; API now offers additional parameters to help you fetch the exact set of repositories you're looking for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;visibility&lt;/code&gt; parameter lets you request only your public repositories, only your private repositories, or both.&lt;/li&gt;
&lt;li&gt;With the &lt;code&gt;affiliation&lt;/code&gt; parameter, you can ask for repositories you own, repositories where you are a collaborator, repositories you have access to as an organization member, or any combination that suits your needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use these new parameters separately, together, or in combination with other parameters to craft flexible queries that fetch the specific repositories you're seeking.&lt;/p&gt;

&lt;p&gt;For full details, check out the &lt;a href="/v3/repos/#list-your-repositories"&gt;documentation&lt;/a&gt;. If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=List+your+repositories+API"&gt;get in touch&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-07-21:/changes/2015-07-21-automatic-redirects-for-renamed-repositories/</id>
    <title type="html">Automatic redirects for renamed repositories</title>
    <published>2015-07-21T07:00:00Z</published>
    <updated>2015-07-21T07:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-07-21-automatic-redirects-for-renamed-repositories/"/>
    <content type="html">&lt;p&gt;To help API clients gracefully handle renamed repositories, the API now &lt;a href="/changes/2015-04-17-preview-repository-redirects/"&gt;automatically redirects to the repository’s new location&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our thanks goes out to everyone that tried out this enhancement &lt;a href="/changes/2015-04-17-preview-repository-redirects/"&gt;during the preview period&lt;/a&gt;. During the preview period, you needed to &lt;a href="/changes/2015-04-17-preview-repository-redirects/#how-can-i-try-out-the-redirects"&gt;provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header&lt;/a&gt; to opt-in to the redirects. Now that the preview period has ended, you no longer need to specify this custom &lt;a href="/v3/media/"&gt;media type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To learn more about these redirects and how they benefit your applications, be sure to check out the &lt;a href="/changes/2015-04-17-preview-repository-redirects/"&gt;preview period announcement&lt;/a&gt;. As always, if you have any questions, we're &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+Repository+Redirects"&gt;here to help&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-06-24:/changes/2015-06-24-licenses-api-update/</id>
    <title type="html">Licenses API update</title>
    <published>2015-06-24T07:00:00Z</published>
    <updated>2015-06-24T07:00:00Z</updated>
    <author>
      <name>mislav</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-06-24-licenses-api-update/"/>
    <content type="html">&lt;p&gt;We are expanding the &lt;a href="/v3/licenses"&gt;Licenses API&lt;/a&gt; to make it more useful for auditing license usage across all repositories owned by a user or organization.&lt;/p&gt;

&lt;p&gt;Before, license information was only returned for an individual repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/github/hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, license information will also be included in responses from endpoints that list multiple repositories, such as &lt;a href="/v3/repos/#list-organization-repositories"&gt;List organization repositories&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /orgs/github/repos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As before, to access the API during the preview period, you must provide a custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.drax-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information, see the &lt;a href="/v3/licenses/"&gt;Licenses API documentation&lt;/a&gt;, and if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Licenses+API"&gt;let us know&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-06-24:/changes/2015-06-24-breaking-changes-to-organization-permissions-are-now-official/</id>
    <title type="html">Breaking changes to organization permissions are now official</title>
    <published>2015-06-24T07:00:00Z</published>
    <updated>2015-06-24T07:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-06-24-breaking-changes-to-organization-permissions-are-now-official/"/>
    <content type="html">&lt;p&gt;As &lt;a href="/changes/2015-06-10-breaking-changes-to-organization-permissions-coming-on-june-24"&gt;promised earlier this month&lt;/a&gt;, the &lt;a href="/changes/2014-12-08-organization-permissions-api-preview/"&gt;API changes&lt;/a&gt; related to managing organization members and repositories are now official parts of the GitHub API.&lt;/p&gt;

&lt;p&gt;During the migration period, you needed to &lt;a href="/changes/2015-06-10-breaking-changes-to-organization-permissions-coming-on-june-24/#migration-period"&gt;provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header&lt;/a&gt; to opt-in to the changes. Now that the migration period has ended, you no longer need to specify this custom &lt;a href="/v3/media"&gt;media type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Organization+Permissions+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2015-06-24:/changes/2015-06-24-api-enhancements-for-working-with-organization-permissions/</id>
    <title type="html">API enhancements for working with organization permissions</title>
    <published>2015-06-24T07:00:00Z</published>
    <updated>2015-06-24T07:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2015-06-24-api-enhancements-for-working-with-organization-permissions/"/>
    <content type="html">&lt;p&gt;We're introducing several enhancements to allow API developers to take advantage of the &lt;a href="https://github.com/blog/2020-improved-organization-permissions"&gt;improved organization permissions&lt;/a&gt; that we are rolling out. Learn about these enhancements and how you can try them out below.&lt;/p&gt;

&lt;p&gt;Since we're rolling out the &lt;a href="https://github.com/blog/2020-improved-organization-permissions"&gt;improved organization permissions&lt;/a&gt; improvements slowly, these enhancements will only apply to certain organizations at first. Most of these enhancements will degrade gracefully (returning an empty array or something similar) if used on an organization that doesn't support improved organization permissions yet. Check the documentation for your specific API to see if errors are possible.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="api-enhancements" class="anchor" href="#api-enhancements" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;API enhancements&lt;/h2&gt;

&lt;h3&gt;
&lt;a id="team-permissions" class="anchor" href="#team-permissions" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Team permissions&lt;/h3&gt;

&lt;p&gt;In our improved permissions system, a team no longer has a single permission that applies to all of its repositories. Instead, each repository is added to a team with its own permission. For example, an organization could use a single team to grant pull access to one repository, push access to a second, and admin access to a third.&lt;/p&gt;

&lt;p&gt;The team APIs now support this more granular notion of permissions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="/v3/orgs/teams/#add-or-update-team-repository"&gt;Add team repository&lt;/a&gt; API accepts a &lt;code&gt;permission&lt;/code&gt; parameter, so that you can specify whether a team should grant &lt;code&gt;pull&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, or &lt;code&gt;admin&lt;/code&gt; access on a given repository.&lt;/li&gt;
&lt;li&gt;In the &lt;a href="/v3/orgs/teams/#list-team-repos"&gt;List team repositories&lt;/a&gt; and &lt;a href="/v3/orgs/teams/#check-if-a-team-manages-a-repository"&gt;Check if a team manages a repository&lt;/a&gt; API, the response includes a &lt;code&gt;permissions&lt;/code&gt; attribute, indicating whether the team grants &lt;code&gt;pull&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, or &lt;code&gt;admin&lt;/code&gt; access on each repository.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;permission&lt;/code&gt; parameter in the &lt;a href="/v3/orgs/teams/#create-team"&gt;Create team&lt;/a&gt; and &lt;a href="/v3/orgs/teams/#edit-team"&gt;Edit team&lt;/a&gt; APIs is deprecated. Since teams can grant a different permission on each repository, this parameter no longer dictates what permission a team grants on all of its repositories. Instead, it dictates the default permission that the &lt;a href="/v3/orgs/teams/#add-or-update-team-repository"&gt;Add team repository&lt;/a&gt; API will use for requests where no &lt;code&gt;permission&lt;/code&gt; parameter is specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="team-privacy" class="anchor" href="#team-privacy" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Team privacy&lt;/h3&gt;

&lt;p&gt;We now allow you to modify the privacy level of your teams. A "secret" team can only be seen by organization owners and people who are members of that team (which is how all teams have worked historically), while a "closed" team is visible to every member of the organization (which makes it easier to use &lt;a href="https://github.com/blog/1121-introducing-team-mentions"&gt;@mentions&lt;/a&gt; throughout your organization).&lt;/p&gt;

&lt;p&gt;The team APIs now support this new team privacy concept:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="/v3/orgs/teams/#create-team"&gt;Create team&lt;/a&gt; and &lt;a href="/v3/orgs/teams/#edit-team"&gt;Edit team&lt;/a&gt; APIs accept a &lt;code&gt;privacy&lt;/code&gt; parameter, so that you can specify whether a team should be &lt;code&gt;secret&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;All team resources in the API now include a &lt;code&gt;privacy&lt;/code&gt; attribute, indicating whether the team is &lt;code&gt;secret&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a id="team-maintainers" class="anchor" href="#team-maintainers" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Team maintainers&lt;/h3&gt;

&lt;p&gt;We've added the ability for you to delegate team maintenance to non-owners, reducing the workload for your organization's owners. You can now promote a non-owner member of a team to be a "maintainer" of that team. A maintainer can add and remove team members and change the team's title and description.&lt;/p&gt;

&lt;p&gt;The team membership APIs now support this new team maintainer concept:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="/v3/orgs/teams/#add-team-membership"&gt;Add team membership&lt;/a&gt; API accepts a &lt;code&gt;role&lt;/code&gt; parameter, so that you can specify whether a given team member should be a &lt;code&gt;maintainer&lt;/code&gt; or a regular &lt;code&gt;member&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href="/v3/orgs/teams/#list-team-members"&gt;List team members&lt;/a&gt; API accepts an optional &lt;code&gt;role&lt;/code&gt; parameter, allowing you to fetch only &lt;code&gt;maintainer&lt;/code&gt;s or only regular &lt;code&gt;member&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;In the &lt;a href="/v3/orgs/teams/#get-team-membership"&gt;Get team membership&lt;/a&gt; and &lt;a href="/v3/orgs/teams/#add-team-membership"&gt;Add team membership&lt;/a&gt; APIs, the response includes a &lt;code&gt;role&lt;/code&gt; attribute, indicating whether a user is a &lt;code&gt;maintainer&lt;/code&gt; or a regular &lt;code&gt;member&lt;/code&gt; of the team.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information on our improved team permissions, check out our &lt;a href="https://help.github.com/articles/improved-organization-permissions/#understanding-team-permissions"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
&lt;a id="filtering-organization-members-by-role" class="anchor" href="#filtering-organization-members-by-role" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Filtering organization members by role&lt;/h3&gt;

&lt;p&gt;The organization &lt;a href="/v3/orgs/members/#members-list"&gt;Members list&lt;/a&gt; API now accepts a &lt;code&gt;role&lt;/code&gt; parameter, so that you can request to see only the owners (or non-owners) of your organization.&lt;/p&gt;

&lt;h3&gt;
&lt;a id="repository-collaborators" class="anchor" href="#repository-collaborators" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Repository collaborators&lt;/h3&gt;

&lt;p&gt;We now allow you to add collaborators directly to organization-owned repositories, just like we always have for user-owned repositories.&lt;/p&gt;

&lt;p&gt;The collaborator APIs now support organization-owned repositories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="/v3/repos/collaborators/#add-user-as-a-collaborator"&gt;Add user as a collaborator&lt;/a&gt; API works for organization-owned repositories. We've also added a &lt;code&gt;permission&lt;/code&gt; parameter to it (currently valid for organization-owned repositories only), so that you can specify what level of access the collaborator should have on the repository.&lt;/li&gt;
&lt;li&gt;In the &lt;a href="/v3/repos/collaborators/#list-collaborators"&gt;List collaborators&lt;/a&gt; API, the response includes a &lt;code&gt;permissions&lt;/code&gt; attribute describing the permissions that each collaborator has on your organization's repositories.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
&lt;a id="preview-period" class="anchor" href="#preview-period" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Preview period&lt;/h2&gt;

&lt;p&gt;Starting today, these API enhancements are available for developers to preview. At the end of the preview period, these enhancements will become official components of the GitHub API.&lt;/p&gt;

&lt;p&gt;While these enhancements are in their preview period, you'll need to provide the following &lt;a href="/v3/media/"&gt;custom media type&lt;/a&gt; in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.ironman-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the preview period, we may change aspects of these enhancements. If we do, we will announce the changes on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;h2&gt;
&lt;a id="send-us-your-feedback" class="anchor" href="#send-us-your-feedback" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Send us your feedback&lt;/h2&gt;

&lt;p&gt;We would love to hear your thoughts on these enhancements. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Organization+Permissions+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
</feed>

