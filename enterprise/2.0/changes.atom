<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://developer.github.com/</id>
  <title>GitHub API Changes</title>
  <updated>2014-08-28T00:00:00Z</updated>
  <link rel="alternate" href="http://developer.github.com/" />
  <link rel="self" href="http://developer.github.com/changes.atom" />
  <author>
    <name>technoweenie</name>
    <uri>https://github.com/technoweenie</uri>
  </author>
  <entry>
    <id>tag:developer.github.com,2014-08-28:/changes/2014-08-28-accepting-organization-invitations-from-the-api/</id>
    <title type="html">Accepting organization invitations from the API</title>
    <published>2014-08-28T00:00:00Z</published>
    <updated>2014-08-28T00:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-08-28-accepting-organization-invitations-from-the-api/" />
    <content type="html">&lt;p&gt;The upcoming &lt;a href="/changes/2014-08-05-team-memberships-api/"&gt;Team Memberships API&lt;/a&gt; gives you the power to &lt;a href="https://help.github.com/articles/adding-or-inviting-members-to-a-team-in-an-organization"&gt;invite&lt;/a&gt; new GitHub users to your organization via the API. We’re expanding the API to also allow users to view their organization membership statuses and accept any invitations they’ve received.&lt;/p&gt;

&lt;h3 id="the-new-organization-memberships-api"&gt;The new Organization Memberships API&lt;/h3&gt;

&lt;p&gt;When someone &lt;a href="https://help.github.com/articles/adding-or-inviting-members-to-a-team-in-an-organization"&gt;invites&lt;/a&gt; you to an organization, your membership with that organization begins in the “pending” state. The new &lt;a href="/v3/orgs/members/#list-your-organization-memberships"&gt;list organization memberships&lt;/a&gt; endpoint allows you to find your pending memberships. You can then change them to “active” (accepting the invitation in the process) by using the &lt;a href="/v3/orgs/members/#edit-your-organization-membership"&gt;edit organization membership&lt;/a&gt; endpoint.&lt;/p&gt;

&lt;h3 id="new-team-membership-api-response-attribute"&gt;New Team Membership API response attribute&lt;/h3&gt;

&lt;p&gt;Previously, responses from the &lt;a href="/v3/orgs/teams/#add-team-membership"&gt;add team membership&lt;/a&gt; and &lt;a href="/v3/orgs/teams/#get-team-membership"&gt;get team membership&lt;/a&gt; endpoints included a “status” attribute, which could either be “active” or “pending”. We’ve renamed this attribute from “status” to “state” for better consistency with our other API calls.&lt;/p&gt;

&lt;p&gt;To give you time to update your apps, we’ll keep the legacy “status” attribute around alongside the new “state” attribute until &lt;strong&gt;September 4th, 2014&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id="preview-period"&gt;Preview period&lt;/h3&gt;

&lt;p&gt;The new Organization Memberships API is available for developers to preview alongside the &lt;a href="/changes/2014-08-05-team-memberships-api/"&gt;Team Memberships API&lt;/a&gt;. During this period, we may change aspects of these endpoints. If we do, we will announce the changes on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;While these new APIs are in their preview period, you’ll need to provide the following custom media type in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.the-wasp-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We expect the preview period to last 30-60 days. At the end of the preview period, the Team and Organization Memberships APIs will become official components of GitHub API v3.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Team+Memberships+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-08-15:/changes/2014-08-15-deployments-api-changes/</id>
    <title type="html">New features for the Deployments API preview</title>
    <published>2014-08-15T00:00:00Z</published>
    <updated>2014-08-15T00:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-08-15-deployments-api-changes/" />
    <content type="html">&lt;p&gt;We’ve added two new features to the &lt;a href="https://developer.github.com/changes/2014-01-09-preview-the-new-deployments-api/"&gt;Deployments API preview&lt;/a&gt;: the ability to query deployments and a new &lt;code&gt;task&lt;/code&gt; attribute for different types of deployment tasks.&lt;/p&gt;

&lt;h2 id="api-changes"&gt;API changes&lt;/h2&gt;

&lt;p&gt;You can now search for deployments via query parameters to the &lt;a href="https://developer.github.com/v3/repos/deployments/#list-deployments"&gt;listing endpoint&lt;/a&gt;. You can filter on &lt;code&gt;sha&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;task&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt;. This makes it easier to answer questions like “when was the last time someone deployed to staging?”&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl -H "Authorization: token [yours]" \
       https://api.github.com/repos/octocat/my-repo/deployments?environment=staging
&lt;/pre&gt;

&lt;h2 id="new-attribute"&gt;New attribute&lt;/h2&gt;

&lt;p&gt;We’ve also added a &lt;code&gt;task&lt;/code&gt; attribute to the deployment resource. The &lt;code&gt;task&lt;/code&gt; attribute allows you to specify tasks other than just pushing code. Popular deployment tools like &lt;a href="http://capistranorb.com/"&gt;capistrano&lt;/a&gt; and &lt;a href="http://www.fabfile.org/"&gt;fabric&lt;/a&gt; support named tasks to do things like running schema migrations. We hope this attribute will give integrators the flexibility they need to provide custom functionality.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-08-05:/changes/2014-08-05-team-memberships-api/</id>
    <title type="html">We're changing the way you add new members to your organization</title>
    <published>2014-08-05T00:00:00Z</published>
    <updated>2014-08-05T00:00:00Z</updated>
    <author>
      <name>jakeboxer</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-08-05-team-memberships-api/" />
    <content type="html">&lt;p&gt;Today, we’re announcing a change to the way organization owners add new members to their organization.&lt;/p&gt;

&lt;p&gt;Previously, if you were an organization owner, you could use the &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; endpoint to add any GitHub user to any team on your organization without any sort of approval from them. Now, we’re increasing user security by sending &lt;a href="https://help.github.com/articles/adding-or-inviting-members-to-a-team-in-an-organization"&gt;invitations&lt;/a&gt; to users when they’re added to teams on organizations that they aren’t yet a part of.&lt;/p&gt;

&lt;p&gt;With this change, if you use the &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; endpoint to add a user to a team and that user isn’t already on another team in your organization, the request will fail.&lt;/p&gt;

&lt;h3 id="the-new-team-memberships-api"&gt;The new Team Memberships API&lt;/h3&gt;

&lt;p&gt;You should change all your &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; requests to use the new &lt;a href="/v3/orgs/teams/#add-team-membership"&gt;add team membership&lt;/a&gt; endpoint. This new endpoint works exactly the same as the old one, with one important change: if the membership being added is for a user who is unaffiliated with the team’s organization, that user will be sent an invitation via email.&lt;/p&gt;

&lt;p&gt;Unlike the &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; endpoint, a successful request to the &lt;a href="/v3/orgs/teams/#add-team-membership"&gt;add team membership&lt;/a&gt; endpoint does &lt;em&gt;not&lt;/em&gt; guarantee that the user is now a member of the team. If you’re trying to migrate to the new endpoint and need to know when a user has been successfully added (not just invited) to a team, please check out &lt;a href="/v3/activity/events/types/#teamaddevent"&gt;TeamAddEvent&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="preview-period"&gt;Preview period&lt;/h3&gt;

&lt;p&gt;We’re making the new Team Memberships API (and the breaking changes to the &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; API) available today for developers to preview. During this period, we may change aspects of these endpoints. If we do, we will announce the changes on the developer blog, but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;While these new APIs are in their preview period, you’ll need to provide the following custom media type in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.the-wasp-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We expect the preview period to last 30-60 days. At the end of the preview period, the Team Memberships API will become an official component of GitHub API v3, as will the &lt;a href="/v3/orgs/teams/#add-team-member"&gt;add team member&lt;/a&gt; API’s breaking changes.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Team+Memberships+API"&gt;get in touch with us&lt;/a&gt;!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-07-28:/changes/2014-07-28-assignee-and-label-actions-for-issue-events/</id>
    <title type="html">New assigned/labeled actions for issue and pull request events</title>
    <published>2014-07-28T00:00:00Z</published>
    <updated>2014-07-28T00:00:00Z</updated>
    <author>
      <name>jdpace</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-07-28-assignee-and-label-actions-for-issue-events/" />
    <content type="html">&lt;p&gt;As part of the &lt;a href="https://github.com/blog/1866-the-new-github-issues"&gt;new GitHub Issues&lt;/a&gt;, we’ve added new actions to the issues and pull requests webhook events: “labeled”, “unlabeled”, “assigned”, and “unassigned”. The payload will also include the respective assignee or label for these new actions.&lt;/p&gt;

&lt;p&gt;If you already have a &lt;a href="/webhooks/"&gt;webhook&lt;/a&gt; subscribed to the &lt;code&gt;issues&lt;/code&gt; or &lt;code&gt;pull_request&lt;/code&gt; events, you’ll start seeing these new actions immediately. The new events can also be fetched from the &lt;a href="/v3/issues/events/"&gt;issue events API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information, be sure to check out our documentation for the &lt;a href="/v3/activity/events/types/#issuesevent"&gt;IssuesEvent&lt;/a&gt; or &lt;a href="/v3/activity/events/types/#pullrequestevent"&gt;PullRequestEvent&lt;/a&gt;. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=New+Assigned+and+Labeled+Actions+for+Issues+and+Pull+Request+Events"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-07-09:/changes/2014-07-09-status-contexts-are-official/</id>
    <title type="html">The Combined Status API is official</title>
    <published>2014-07-09T00:00:00Z</published>
    <updated>2014-07-09T00:00:00Z</updated>
    <author>
      <name>bhuga</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-07-09-status-contexts-are-official/" />
    <content type="html">&lt;p&gt;We’re happy to announce that the &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status API&lt;/a&gt; is officially part
of the GitHub API v3. We now consider it stable for production use.&lt;/p&gt;

&lt;p&gt;Thanks to everyone who provided feedback during the comment period. We got
some great feedback, and hope this feature helps you build the tools you
need to make GitHub the best place to ship exactly the way you want.&lt;/p&gt;

&lt;h3 id="preview-media-type-no-longer-needed"&gt;Preview media type no longer needed&lt;/h3&gt;

&lt;p&gt;If you used the Combined Status API during the preview period, you needed to
provide a custom media type in the &lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.she-hulk-preview+json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that the preview period has ended, you no longer need to pass this custom
media type.&lt;/p&gt;

&lt;p&gt;Instead, we &lt;a href="/v3/media"&gt;recommend&lt;/a&gt; that you specify &lt;code&gt;v3&lt;/code&gt; as the version in the
&lt;code&gt;Accept&lt;/code&gt; header:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;application/vnd.github.v3+json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="feedback"&gt;Feedback&lt;/h3&gt;

&lt;p&gt;We’ll never be done listening to you! As always, please don’t hesitate to
&lt;a href="https://github.com/contact?form%5Bsubject%5D=Combined+Status+API"&gt;share your feedback&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-07-07:/changes/2014-07-07-example-webhook-payloads/</id>
    <title type="html">New example webhook payloads</title>
    <published>2014-07-07T00:00:00Z</published>
    <updated>2014-07-07T00:00:00Z</updated>
    <author>
      <name>kdaigle</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-07-07-example-webhook-payloads/" />
    <content type="html">&lt;p&gt;Today, we’ve added example &lt;a href="https://github.com/blog/1778-webhooks-level-up"&gt;webhook&lt;/a&gt; payloads to the &lt;a href="/v3/activity/events/types/"&gt;event types&lt;/a&gt; page.
Alongside existing descriptions for each event, we now include an &lt;a href="/v3/activity/events/types/#issuesevent"&gt;example payload&lt;/a&gt;
so that you can quickly see the data provided by the event. You can learn more about how webhooks
work with our &lt;a href="/webhooks/"&gt;Webhooks Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Example+webhook+payloads"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-06-23:/changes/2014-06-23-the-github-enterprise-api-documentation-has-a-new-home/</id>
    <title type="html">The GitHub Enterprise API documentation has a new home!</title>
    <published>2014-06-23T00:00:00Z</published>
    <updated>2014-06-23T00:00:00Z</updated>
    <author>
      <name>gjtorikian</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-06-23-the-github-enterprise-api-documentation-has-a-new-home/" />
    <content type="html">&lt;p&gt;&lt;a href="https://enterprise.github.com"&gt;GitHub Enterprise&lt;/a&gt; offers the same set of APIs as GitHub.com, as well as its own set of Enterprise-specific functionality.&lt;/p&gt;

&lt;p&gt;The GitHub Enterprise API has been documented on &lt;a href="https://enterprise.github.com/help"&gt;the Enterprise Help site&lt;/a&gt; for some time. We’ve now &lt;a href="https://developer.github.com/v3/enterprise/"&gt;moved the resources to this site&lt;/a&gt; to be hosted alongside the rest of the GitHub API documentation.&lt;/p&gt;

&lt;p&gt;Is there an API workflow you’re particularly interested in? &lt;a href="https://github.com/contact?form%5Bsubject%5D=Suggestion+for+an+Enterprise+Guide"&gt;Let us know&lt;/a&gt; and we’ll do our best to &lt;a href="https://developer.github.com/guides/"&gt;write a guide&lt;/a&gt;!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-06-19:/changes/2014-06-19-combined-status-api-pagination/</id>
    <title type="html">Pagination in the Combined Status API</title>
    <published>2014-06-19T00:00:00Z</published>
    <updated>2014-06-19T00:00:00Z</updated>
    <author>
      <name>bhuga</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-06-19-combined-status-api-pagination/" />
    <content type="html">&lt;p&gt;We’re getting close to bringing the &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status API&lt;/a&gt; out of preview
mode, and have just a couple of small changes to make before it’s :sparkles:.&lt;/p&gt;

&lt;p&gt;First, we’re now &lt;a href="/v3/#pagination"&gt;paginating&lt;/a&gt; combined status API calls. The combined status
&lt;code&gt;state&lt;/code&gt; field will always take all statuses into account, but we’ll now only
return 100 embedded statuses at a time.&lt;/p&gt;

&lt;p&gt;Second, we’re adding a &lt;code&gt;total_count&lt;/code&gt; field, mirroring the Search API. This
count represents the number of contexts submitted for the given commit.&lt;/p&gt;

&lt;p&gt;As always, we’re interested in &lt;a href="https://github.com/contact?form%5Bsubject%5D=Combined+Status+API"&gt;hearing your feedback&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-06-11:/changes/2014-06-11-improved-ci-support-for-deployments-api/</id>
    <title type="html">Improved CI support for the Deployments API</title>
    <published>2014-06-11T00:00:00Z</published>
    <updated>2014-06-11T00:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-06-11-improved-ci-support-for-deployments-api/" />
    <content type="html">&lt;p&gt;Today we’re making a few minor changes to the &lt;a href="https://developer.github.com/changes/2014-01-09-preview-the-new-deployments-api/"&gt;Deployments API preview&lt;/a&gt;. With the introduction of &lt;a href="https://developer.github.com/changes/2014-03-27-combined-status-api/"&gt;combined statuses&lt;/a&gt; in a &lt;a href="https://developer.github.com/changes/2014-04-10-deployment-api-preview-extension/"&gt;recent update&lt;/a&gt;, we noticed a few inconsistencies with the API that we’d like to remedy.&lt;/p&gt;

&lt;p&gt;We’re introducing a new parameter called &lt;code&gt;required_contexts&lt;/code&gt;. This parameter accepts an array of named &lt;a href="https://developer.github.com/v3/repos/statuses/"&gt;commit status&lt;/a&gt; contexts that are ensured to be in a “success” state before the deployment is created. This allows you to verify that more than one system verified your code before you deploy it.&lt;/p&gt;

&lt;p&gt;We’ve removed support for the &lt;code&gt;force&lt;/code&gt; parameter. The force parameter existed to bypass both the auto-merge and commit status checks. The same behavior can now be accomplished by setting &lt;code&gt;auto_merge&lt;/code&gt; and &lt;code&gt;required_contexts&lt;/code&gt; appropriately.&lt;/p&gt;

&lt;p&gt;We’re also setting a context for all &lt;a href="https://developer.github.com/v3/repos/statuses/"&gt;commit statuses&lt;/a&gt;. If a commit status is created without a context, we’ll now set it to the string “default”.&lt;/p&gt;

&lt;p&gt;If you have any questions or concerns, &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-06-09:/changes/2014-06-09-new-attributes-for-pull-request-review-comment-events/</id>
    <title type="html">New attributes for PullRequestReviewComment events</title>
    <published>2014-06-09T00:00:00Z</published>
    <updated>2014-06-09T00:00:00Z</updated>
    <author>
      <name>jdpace</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-06-09-new-attributes-for-pull-request-review-comment-events/" />
    <content type="html">&lt;p&gt;We’ve enhanced the &lt;a href="https://developer.github.com/v3/activity/events/types/#pullrequestreviewcommentevent"&gt;PullRequestReviewComment events payloads&lt;/a&gt; to include &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;pull_request&lt;/code&gt; attributes. With the addition of the &lt;code&gt;pull_request&lt;/code&gt; attribute, you now have immediate access to detailed information about the pull request without needing an additional API request.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=PullRequestReviewComment+Event+Payloads"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-05-19:/changes/2014-05-19-deployments-api-updates/</id>
    <title type="html">New attributes for the Deployments API</title>
    <published>2014-05-19T00:00:00Z</published>
    <updated>2014-05-19T00:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-05-19-deployments-api-updates/" />
    <content type="html">&lt;p&gt;We’re continuing to iterate on the &lt;a href="https://developer.github.com/changes/2014-01-09-preview-the-new-deployments-api/"&gt;Deployments API preview&lt;/a&gt;, and we’re starting to see it satisfy more and more use cases. Today we’re introducing new attributes for Deployments and Deployment Statuses as well as a few payload changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a breaking change for Deployment Status payloads&lt;/strong&gt;. If you’re trying out this new API during its preview period, you’ll need to update your code to continue working with it.&lt;/p&gt;

&lt;h2 id="api-changes"&gt;API Changes&lt;/h2&gt;

&lt;p&gt;For Deployments we’re introducing the concept of an &lt;code&gt;environment&lt;/code&gt;. An environment is basically a unique identifier for a deployment target. Lots of people tend toward the concept of environments for staging, QA, user acceptance testing, etc. We hope this enhancement will enable more use cases for our users that deploy to multiple environments.&lt;/p&gt;

&lt;p&gt;Deployments are also persisting the requested deployment &lt;code&gt;ref&lt;/code&gt;. Previously we resolved a ref to the current SHA for that ref. Now we’ll be keeping the ref around for historical purposes. This is especially helpful if you’re deploying branches to verify them before you merge them into your default branch (e.g., “master”).&lt;/p&gt;

&lt;h2 id="json-payload-changes"&gt;JSON Payload Changes&lt;/h2&gt;

&lt;p&gt;We’re also adding a few attributes to the outbound Deployment payloads. We’re now including the &lt;code&gt;ref&lt;/code&gt; attribute so you know the branch or tag name that resolved to a specific SHA. The &lt;code&gt;environment&lt;/code&gt; is also present.&lt;/p&gt;

&lt;h2 id="webhook-changes"&gt;Webhook Changes&lt;/h2&gt;

&lt;p&gt;The Deployment Status payloads now embed the associated Deployment object. With this enhancement, Deployment Status events received via webhooks will have enough information to notify other systems, without having to call back to the GitHub API for the &lt;code&gt;environment&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, or payload that was deployed.&lt;/p&gt;

&lt;h3 id="example-deployment-json"&gt;Example Deployment JSON&lt;/h3&gt;

&lt;pre&gt;&lt;code class="language-javascript highlight"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/392"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;392&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"sha"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"837db83be4137ca555d9a5598d0a1ea2987ecfee"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"ref"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"master"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"environment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"staging"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"fe"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"fe1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"fe2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"fe3"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ship it!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"creator"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"login"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"my-org"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;521&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"avatar_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://avatars.githubusercontent.com/u/2988?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"User"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"created_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:56:47Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"updated_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:56:47Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"statuses_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/392/statuses"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="example-deployment-status-json"&gt;Example Deployment Status JSON&lt;/h3&gt;

&lt;pre&gt;&lt;code class="language-javascript highlight"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/396/statuses/1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"state"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"deployment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/396"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;392&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"sha"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"837db83be4137ca555d9a5598d0a1ea2987ecfee"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"ref"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"master"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"fe"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"fe1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"fe2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"fe3"&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;"environment"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"production"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Deploying to production"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"creator"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"login"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"alysson-goldner"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;540&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"User"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;"created_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:59:36Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"updated_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:59:36Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"statuses_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/396/statuses"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Deployment succeeded"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"target_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://deploy.myorg.com/apps/my-repo/logs/420"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"created_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:59:39Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"updated_at"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-05-09T19:59:39Z"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"deployment_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://api.github.com/repos/my-org/my-repo/deployments/396"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-05-09:/changes/2014-05-09-improved-pagination-for-the-repository-commits-api/</id>
    <title type="html">Improved pagination for the Repository Commits API</title>
    <published>2014-05-09T00:00:00Z</published>
    <updated>2014-05-09T00:00:00Z</updated>
    <author>
      <name>izuzak</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-05-09-improved-pagination-for-the-repository-commits-api/" />
    <content type="html">&lt;p&gt;The &lt;a href="/v3/repos/commits/"&gt;Repository Commits API&lt;/a&gt; now supports an additional approach for paginating &lt;a href="/v3/repos/commits/#list-commits-on-a-repository"&gt;commit lists&lt;/a&gt;. As of today, this endpoint supports the “standard” &lt;a href="/v3/#pagination"&gt;&lt;code&gt;page&lt;/code&gt; and &lt;code&gt;per_page&lt;/code&gt; parameters&lt;/a&gt; for controlling pagination. This API now uses these parameters by default when constructing &lt;a href="/v3/#pagination"&gt;page links&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="improved-results-and-increased-consistency"&gt;Improved results and increased consistency&lt;/h2&gt;

&lt;p&gt;This new approach improves the reliability of this endpoint, which on rare occasions skipped some commits during pagination. This enhancement also increases the overall consistency of the API, as all endpoints now paginate resource lists the same way.&lt;/p&gt;

&lt;h2 id="old-parameters-still-supported"&gt;Old parameters still supported&lt;/h2&gt;

&lt;p&gt;The old way of paginating, using &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;last_sha&lt;/code&gt;, and &lt;code&gt;per_page&lt;/code&gt; parameters, is still supported in API v3, but it will be removed in the &lt;a href="https://developer.github.com/v3/versions/#v3-deprecations"&gt;next major version of the API&lt;/a&gt;. API clients that are manually constructing URLs for pages should be modified to use the new parameters. Even better, API clients shouldn’t construct URLs for pages manually, but should use &lt;a href="/guides/traversing-with-pagination/"&gt;page links provided by the &lt;code&gt;Link&lt;/code&gt; header&lt;/a&gt; in API responses.&lt;/p&gt;

&lt;p&gt;Since both the new and the old pagination parameters are still supported in API v3, API clients shouldn’t notice any changes today. Still, if you notice any problems with this endpoint, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API:+Commits+pagination+improvements"&gt;let us know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-05-06:/changes/2014-05-06-gist-api-now-truncating-large-files/</id>
    <title type="html">Changes to Gist API response for large files</title>
    <published>2014-05-06T00:00:00Z</published>
    <updated>2014-05-06T00:00:00Z</updated>
    <author>
      <name>leongersing</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-05-06-gist-api-now-truncating-large-files/" />
    <content type="html">&lt;p&gt;In order to provide a faster, more robust API for Gist, we are making two changes to better handle large files in &lt;a href="/v3/gists/#detailed-gist-representation"&gt;Gist API responses&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="truncating-file-contents-larger-than-one-megabyte"&gt;Truncating file contents larger than one megabyte&lt;/h3&gt;

&lt;p&gt;The &lt;a href="/v3/gists/#detailed-gist-representation"&gt;Gist API response&lt;/a&gt; includes data for every file in the Gist. That works well for Gists with reasonably-sized files. When a Gist contains large files, however, it can lead to timeouts when preparing or sending the API response.&lt;/p&gt;

&lt;p&gt;To eliminate those timeouts, the API now limits the amount of content returned for each file. If a file is larger than one megabyte in size, the API response will include the first megabyte of content for that file. (Few Gists have files this large. As a result, most API clients won’t notice any impact from this change.)&lt;/p&gt;

&lt;h3 id="new-truncated-attribute"&gt;New “truncated” attribute&lt;/h3&gt;

&lt;p&gt;The JSON snippet below illustrates the attributes provided for each file in the Gist API response. In it, you’ll notice a new &lt;code&gt;truncated&lt;/code&gt; attribute included as part of the file metadata. This Boolean attribute indicates whether the &lt;code&gt;content&lt;/code&gt; value is truncated for this request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  files: {
    "my_large_file.md": {
      "size": 2097152,
      "content": "Large content. Truncated at end of first megabyte. [...]",
      "truncated": true,
      "raw_url": "https://raw.githubusercontent.com/[...]/my_large_file.md",
      "type": "text/plain",
      "language": "Markdown"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="getting-the-full-content-for-truncated-files"&gt;Getting the full content for truncated files&lt;/h3&gt;

&lt;p&gt;We recognize that sometimes you’ll still want the full content for a file, even if it’s too large to get returned in the standard Gist API response. For files under 10 megabytes, simply make a request to the URL specified in the &lt;code&gt;raw_url&lt;/code&gt; attribute, and you’ll receive the complete content for that file. For larger files, you’ll need to clone the gist locally via the &lt;code&gt;git_pull_url&lt;/code&gt; to access the full file contents.&lt;/p&gt;

&lt;p&gt;If you have any questions, don’t hesitate to &lt;a href="https://github.com/contact?form%5Bsubject%5D=Gist+API+now+truncates+large+files"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-25:/changes/2014-04-25-user-content-security/</id>
    <title type="html">New user content domains</title>
    <published>2014-04-25T00:00:00Z</published>
    <updated>2014-04-25T00:00:00Z</updated>
    <author>
      <name>azizshamim</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-25-user-content-security/" />
    <content type="html">&lt;h2 id="securing-your-content"&gt;Securing your content&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://bounty.github.com"&gt;GitHub Bug Bounty program&lt;/a&gt; recently identified a few cross-domain vulnerabilities related to user-generated content, and we’ve shipped improvements today to address those issues.&lt;/p&gt;

&lt;p&gt;In order to better isolate your content from potentially malicious content uploaded by other users (e.g., content that might contain Cross-Site Scripting or other embedded attacks), we now serve user-generated content from subdomains of &lt;strong&gt;githubusercontent.com&lt;/strong&gt;. This content is no longer served from subdomains of &lt;strong&gt;github.com&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="whats-affected"&gt;What’s affected?&lt;/h2&gt;

&lt;p&gt;This change affects the following subdomains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;strong&gt;raw.github.com&lt;/strong&gt; : Serves raw file content from your repository.&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;embed.github.com&lt;/strong&gt; : Allows users to embed rich GitHub content on other sites.&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;render.github.com&lt;/strong&gt; : Displays rich content on GitHub.com.&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;f.cloud.github.com&lt;/strong&gt; : Hosts all those amazing gifs you use in Pull Requests and Issues.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Content formerly served by these subdomains is now served from subdomains of &lt;strong&gt;githubusercontent.com&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="older-links"&gt;Older links&lt;/h2&gt;

&lt;p&gt;If you have old links to this content, don’t worry: as of today, we’re forcing the old domains to redirect to the new domains. Your existing links should continue to work automatically in your browser. If you’re using a URL from Gist or GitHub to directly access user-generated content via &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt;, or a library (like &lt;a href="https://github.com/jnunemaker/httparty"&gt;HTTParty&lt;/a&gt;), be sure to configure that tool to follow the redirect.&lt;/p&gt;

&lt;h2 id="your-proxies-or-filters"&gt;Your proxies or filters&lt;/h2&gt;

&lt;p&gt;Some security systems (web proxies, for example) may not recognize the &lt;strong&gt;githubusercontent.com&lt;/strong&gt; domain. In those cases, you may need update your proxies and security software accordingly.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Changes+to+user+content+domains"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy and safe GitHubbing!&lt;/em&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-22:/changes/2014-04-22-deprecating-beta-media-type/</id>
    <title type="html">Deprecating the beta media type</title>
    <published>2014-04-22T00:00:00Z</published>
    <updated>2014-04-22T00:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-22-deprecating-beta-media-type/" />
    <content type="html">&lt;p&gt;Now that the GitHub API is &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;serving the v3 media type by default&lt;/a&gt;, we are deprecating the legacy &lt;a href="/v3/versions/#beta"&gt;beta media type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will eventually remove support for the beta media type, but we have no official retirement date to annouce at the moment. When the time comes, rest assured that we’ll announce the retirement with plenty of notice. In the meantime, existing API clients that rely on the beta media type should start making plans to migrate to v3. The beta media type differs from v3 in &lt;a href="/v3/versions/#differences-from-beta-version"&gt;just a few places&lt;/a&gt;. In most cases, migrating an application from the beta media type to the v3 media type is smooth and painless.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API:+Deprecating+the+beta+media+type"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-10:/changes/2014-04-10-deployment-api-preview-extension/</id>
    <title type="html">Extending the preview period for the Deployments API</title>
    <published>2014-04-10T00:00:00Z</published>
    <updated>2014-04-10T00:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-10-deployment-api-preview-extension/" />
    <content type="html">&lt;p&gt;The preview period for the new &lt;a href="/changes/2014-01-09-preview-the-new-deployments-api/"&gt;Deployments API&lt;/a&gt; continues to yield valuable feedback from developers. In early March, we used that feedback to &lt;a href="/changes/2014-03-03-deployments-api-updates/"&gt;improve the payload format&lt;/a&gt; that integrations can use to customize deployments. A few weeks later, we began integrating with the new &lt;a href="/changes/2014-03-27-combined-status-api/"&gt;Combined Status API&lt;/a&gt; to help ensure that only verified code gets deployed, even if you have multiple systems verifying different aspects of your software.&lt;/p&gt;

&lt;p&gt;To give developers time to explore these recent refinements to the Deployments API, we’re extending the preview period for a little while longer. As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-09:/changes/2014-04-09-reminder-about-default-media-type-change/</id>
    <title type="html">Reminder: Default media type will change on April 15</title>
    <published>2014-04-09T00:00:00Z</published>
    <updated>2014-04-09T00:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-09-reminder-about-default-media-type-change/" />
    <content type="html">&lt;p&gt;Just a friendly reminder: On April 15, 2014, the GitHub API will start serving the v3 media type by default. Please see the &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;original announcement&lt;/a&gt; for full details about &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#whats-changing"&gt;this change&lt;/a&gt;, &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#who-is-affected"&gt;who it affects&lt;/a&gt;, and &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#what-should-you-do"&gt;how to ensure that you are prepared&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Upcoming+change+to+default+API+media+type"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-08:/changes/2014-04-08-reset-api-tokens/</id>
    <title type="html">Recommendation: Reset OAuth authorizations</title>
    <published>2014-04-08T00:00:00Z</published>
    <updated>2014-04-08T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-08-reset-api-tokens/" />
    <content type="html">&lt;p&gt;As &lt;a href="https://github.com/blog/1818-security-heartbleed-vulnerability"&gt;announced earlier today&lt;/a&gt;, we are actively responding
to the recently-disclosed &lt;a href="https://github.com/blog/1818-security-heartbleed-vulnerability"&gt;Heartbleed security
vulnerability&lt;/a&gt; in OpenSSL. While at this time GitHub has
no indication that the attack has been used beyond testing the vulnerability, we
recommend that integrators &lt;a href="/v3/oauth_authorizations/#reset-an-authorization"&gt;reset the API authorizations&lt;/a&gt; for their OAuth
applications.&lt;/p&gt;

&lt;p&gt;We’ve added a &lt;a href="/v3/oauth_authorizations/#reset-an-authorization"&gt;new API method&lt;/a&gt; for this exact purpose. Calling this method
will invalidate the old token and return a new token for applications to store
and use in its place. This new method provides a safe way to reset user
authorizations without requiring users to re-authorize the application on the
web.&lt;/p&gt;

&lt;p&gt;Integrators can also use the existing revocation methods to &lt;a href="/v3/oauth_authorizations/#revoke-all-authorizations-for-an-application"&gt;revoke all
tokens&lt;/a&gt; or &lt;a href="/v3/oauth_authorizations/#revoke-an-authorization-for-an-application"&gt;revoke a single token&lt;/a&gt; for their applications.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+resetting+tokens"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-07:/changes/2014-04-07-understanding-search-results-and-potential-timeouts/</id>
    <title type="html">Understanding search results and potential timeouts</title>
    <published>2014-04-07T00:00:00Z</published>
    <updated>2014-04-07T00:00:00Z</updated>
    <author>
      <name>izuzak</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-07-understanding-search-results-and-potential-timeouts/" />
    <content type="html">&lt;p&gt;Some queries are computationally expensive for our search infrastructure to
execute. To keep the &lt;a href="/v3/search"&gt;Search API&lt;/a&gt; fast for everyone, we limit how
long any individual query can run. In rare situations when a query exceeds the
time limit, the API returns all matches that were found prior to the timeout.&lt;/p&gt;

&lt;p&gt;Starting today, the Search API also now &lt;a href="/v3/search/#timeouts-and-incomplete-results"&gt;informs you when such a timeout
happens&lt;/a&gt;. Reaching a timeout does
not necessarily mean that search results are incomplete. It just means that the
query was discontinued before it searched through all possible data. More
results might have been found, but also might not.&lt;/p&gt;

&lt;p&gt;In some cases, if you know that your search results are potentially incomplete,
you might think about the data differently. By exposing timeouts when they
happen, the API helps you better understand how to interpret the results.&lt;/p&gt;

&lt;p&gt;We hope this is useful as you integrate with the Search API. In the meantime,
we’re working on improving search so that these timeouts occur as rarely as
possible. If you have any questions, &lt;a href="https://github.com/contact?form%5Bsubject%5D=Search+API"&gt;let us know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-04-04:/changes/2014-04-04-create-public-repo-without-repo-scope/</id>
    <title type="html">Grant access to create public repositories without granting access to private repositories</title>
    <published>2014-04-04T00:00:00Z</published>
    <updated>2014-04-04T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-04-04-create-public-repo-without-repo-scope/" />
    <content type="html">&lt;p&gt;The &lt;a href="/v3/repos/#create"&gt;Create Repository method&lt;/a&gt; now allows creating public repositories via
OAuth with &lt;code&gt;public_repo&lt;/code&gt; &lt;a href="/v3/oauth/#scopes"&gt;scope&lt;/a&gt;.  This means you can safely grant third
party applications the ability to create public repositories on your behalf
without granting access to your private repositories.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+create+repositories+with+public_repo+scope"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-27:/changes/2014-03-27-combined-status-api/</id>
    <title type="html">Preview the New Combined Status API</title>
    <published>2014-03-27T00:00:00Z</published>
    <updated>2014-03-27T00:00:00Z</updated>
    <author>
      <name>bhuga</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-27-combined-status-api/" />
    <content type="html">&lt;p&gt;What does it mean for a branch to be “green?” The &lt;a href="/v3/repos/statuses/"&gt;Status API&lt;/a&gt; helps
thousands of teams answer that question. Developers use it to record the status
of continuous integration builds, contributor license agreements, code coverage
analysis, automated security testing, dependency management, and more.&lt;/p&gt;

&lt;p&gt;For many teams, a branch is considered “green” only when &lt;em&gt;all&lt;/em&gt; of their various
status checks are successful. With the new &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status
API&lt;/a&gt;, developers can easily fetch this single, consolidated
status for any branch, commit, or tag.&lt;/p&gt;

&lt;h3 id="status-context"&gt;Status context&lt;/h3&gt;

&lt;p&gt;To help multiple service providers use the Status API simultaneously, statuses
now support a &lt;code&gt;context&lt;/code&gt; field. This field allows a provider to distinguish its
statuses from another provider’s statuses. For example, your &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt; builds
might use a context of &lt;code&gt;ci/jenkins&lt;/code&gt;, while your &lt;a href="http://brakemanscanner.org/"&gt;Brakeman&lt;/a&gt; checks might adopt a
context of &lt;code&gt;security/brakeman&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The new &lt;a href="/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;Combined Status endpoint&lt;/a&gt; returns a single,
combined state, as well as the latest status from each context. Systems that
consume status updates can now get all the information they need in one place.&lt;/p&gt;

&lt;h3 id="opt-in"&gt;Opt-in&lt;/h3&gt;

&lt;p&gt;The existing &lt;a href="/v3/repos/statuses/#list-statuses-for-a-specific-ref"&gt;Status API&lt;/a&gt; continues to work as it always has. The
&lt;code&gt;context&lt;/code&gt; field is entirely optional, and the &lt;a href="https://github.com/blog/1227-commit-status-api"&gt;color of the merge button on pull
requests&lt;/a&gt; does not currently
take context into account.&lt;/p&gt;

&lt;h3 id="preview-period"&gt;Preview period&lt;/h3&gt;

&lt;p&gt;We’re making this new API available today for developers to
&lt;a href="/v3/repos/statuses/"&gt;preview&lt;/a&gt;. During this period, we may change aspects of the Combined
Status API from time to time. We will announce any changes here (on the
developer blog), but we will not provide any advance notice.&lt;/p&gt;

&lt;p&gt;We expect the preview period to last 30-60 days. At the end of preview period,
the Combined Status API will become an official component of GitHub API v3. At
that point, this new API will be stable and suitable for production use.&lt;/p&gt;

&lt;p&gt;We hope you’ll &lt;a href="/v3/repos/statuses/"&gt;try it out&lt;/a&gt; and &lt;a href="https://github.com/contact?form%5Bsubject%5D=Combined+Status+API"&gt;send us your feedback&lt;/a&gt;!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-18:/changes/2014-03-18-paginating-method-changes/</id>
    <title type="html">Pagination changes for some resource lists</title>
    <published>2014-03-18T00:00:00Z</published>
    <updated>2014-03-18T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-18-paginating-method-changes/" />
    <content type="html">&lt;p&gt;In an effort to keep the API fast for everyone, we’re enabling
&lt;a href="/v3/#pagination"&gt;pagination&lt;/a&gt; on some API methods that previously did not support it.
Beginning today, the methods below will paginate if you include &lt;code&gt;page&lt;/code&gt; or
&lt;code&gt;per_page&lt;/code&gt; query parameters. Starting April 17th, 2014, these methods will
&lt;em&gt;always&lt;/em&gt; return &lt;a href="/v3/#pagination"&gt;paginated results&lt;/a&gt;. If you have any questions or
run into trouble, feel free to &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+v3:+Pagination+changes"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the complete list of updated methods:&lt;/p&gt;

&lt;h4 id="gist-comments"&gt;&lt;a href="/v3/gists/comments/#list-comments-on-a-gist"&gt;Gist comments&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/comments
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="gist-commits"&gt;&lt;a href="/v3/gists/#list-gist-commits"&gt;Gist commits&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/commits
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="gist-forks"&gt;&lt;a href="/v3/gists/#list-gist-forks"&gt;Gist forks&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /gists/:gist_id/forks
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="git-refs"&gt;&lt;a href="/v3/git/refs/#get-all-references"&gt;Git refs&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/git/refs
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="issue-labels"&gt;&lt;a href="/v3/issues/labels/#list-labels-on-an-issue"&gt;Issue labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/issues/:number/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="milestone-labels"&gt;&lt;a href="/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone"&gt;Milestone labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/milestones/:id/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="organization-teams"&gt;&lt;a href="/v3/orgs/teams/#list-teams"&gt;Organization teams&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /orgs/:org/teams
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="pull-request-commits"&gt;&lt;a href="/v3/pulls/#list-commits-on-a-pull-request"&gt;Pull Request commits&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/pulls/:number/commits
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="pull-request-files"&gt;&lt;a href="/v3/pulls/#list-pull-requests-files"&gt;Pull Request files&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/pulls/:number/files
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="release-assets"&gt;&lt;a href="/v3/repos/releases/#list-assets-for-a-release"&gt;Release assets&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/releases/:id/assets
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-collaborators"&gt;&lt;a href="/v3/repos/collaborators/#list"&gt;Repository collaborators&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/collaborators
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-contributors"&gt;&lt;a href="/v3/repos/#list-contributors"&gt;Repository contributors&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/contributors
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-branches"&gt;&lt;a href="/v3/repos/#list-branches"&gt;Repository branches&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/branches
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-downloads"&gt;&lt;a href="/v3/repos/downloads/#list-downloads-for-a-repository"&gt;Repository downloads&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/downloads
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-keys"&gt;&lt;a href="/v3/repos/keys/#list"&gt;Repository keys&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/keys
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-labels"&gt;&lt;a href="/v3/issues/labels/#list-all-labels-for-this-repository"&gt;Repository labels&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/labels
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-tags"&gt;&lt;a href="/v3/repos/#list-tags"&gt;Repository tags&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/tags
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="repository-teams"&gt;&lt;a href="/v3/repos/#list-teams"&gt;Repository teams&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /repos/:owner/:repo/teams
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="team-members"&gt;&lt;a href="/v3/orgs/teams/#list-team-members"&gt;Team members&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /teams/:id/members
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="team-repositories"&gt;&lt;a href="/v3/orgs/teams/#list-team-repos"&gt;Team repositories&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /teams/:id/repos
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="user-emails-v3-media-type-only"&gt;
&lt;a href="/v3/users/emails/#list-email-addresses-for-a-user"&gt;User emails&lt;/a&gt; (v3 media type only)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /user/emails
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="user-keys"&gt;&lt;a href="/v3/users/keys/#list-public-keys-for-a-user"&gt;User keys&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;GET /users/:user/keys
GET /user/keys
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-12:/changes/2014-03-12-page-build-event-for-webhooks/</id>
    <title type="html">Page Build Event for Webhooks</title>
    <published>2014-03-12T00:00:00Z</published>
    <updated>2014-03-12T00:00:00Z</updated>
    <author>
      <name>benbalter</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-12-page-build-event-for-webhooks/" />
    <content type="html">&lt;p&gt;We’ve made it even easier to track the status of your &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; builds. By subscribing to the new &lt;a href="/v3/activity/events/types/#pagebuildevent"&gt;&lt;code&gt;page_build&lt;/code&gt;&lt;/a&gt; event, your application will receive an event payload containing the results of each build. (As always, these builds occur automatically following each push to a GitHub Pages-enabled branch.)&lt;/p&gt;

&lt;p&gt;If you have a &lt;a href="/webhooks/"&gt;webhook&lt;/a&gt; with the &lt;a href="https://github.com/blog/1778-webhooks-level-up"&gt;“send me everything” option&lt;/a&gt; selected (or if you use the “&lt;a href="/changes/2014-02-24-wildcard-event-for-webhooks/"&gt;wildcard event&lt;/a&gt;” via the API), you will receive the &lt;code&gt;page_build&lt;/code&gt; event after the next build of your GitHub Pages site. Alternatively, if you prefer to subscribe to specific event types, you can add to the new &lt;code&gt;page_build&lt;/code&gt; event to your webhooks via your repository’s webhook settings page or via the &lt;a href="/v3/repos/hooks/"&gt;webhooks API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information, be sure to check out our guide on &lt;a href="/webhooks/"&gt;working with webhooks&lt;/a&gt;. If you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+Page+Build+Event"&gt;drop us a line&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-05:/changes/2014-03-05-reminder-about-upcoming-cutover-test/</id>
    <title type="html">Reminder: March 12 Cutover Test for Default Media Type</title>
    <published>2014-03-05T00:00:00Z</published>
    <updated>2014-03-05T00:00:00Z</updated>
    <author>
      <name>jasonrudolph</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-05-reminder-about-upcoming-cutover-test/" />
    <content type="html">&lt;p&gt;In January, we announced an &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;upcoming change to the default media type&lt;/a&gt;. To help developers assess the impact of that change before it becomes permanent, we’re performing a &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#cutover-test"&gt;24-hour cutover test next week&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From approximately 12:01am UTC to 11:59pm UTC on March 12, the API will &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/#whats-changing"&gt;respond with the v3 media type by default&lt;/a&gt;. (See the &lt;a href="http://www.timeanddate.com/worldclock/fixedtime.html?iso=20140312T00&amp;amp;p1=1440"&gt;start time for the cutover test in your time zone&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/GitHubAPI"&gt;@GitHubAPI&lt;/a&gt; to receive updates before and after the test.&lt;/p&gt;

&lt;p&gt;Please see the &lt;a href="/changes/2014-01-07-upcoming-change-to-default-media-type/"&gt;original announcement&lt;/a&gt; for full details. If you have any questions, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Upcoming+change+to+default+API+media+type"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-04:/changes/2014-03-04-timezone-handling-changes/</id>
    <title type="html">Improved timezone handling in the API</title>
    <published>2014-03-04T00:00:00Z</published>
    <updated>2014-03-04T00:00:00Z</updated>
    <author>
      <name>dbussink</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-04-timezone-handling-changes/" />
    <content type="html">&lt;p&gt;We have improved support for handling timezones in our API. For example, if you
create commits through the API, we now allow for specifying timezone information
more accurately.&lt;/p&gt;

&lt;p&gt;We apply the following rules, in order of priority, to determine timezone
information for API calls:&lt;/p&gt;

&lt;h4 id="explicitly-provide-an-iso-8601-timestamp-with-timezone-information"&gt;Explicitly provide an ISO 8601 timestamp with timezone information&lt;/h4&gt;

&lt;p&gt;For API calls that allow for a timestamp to be specified, we use that exact
timestamp. An example of this is the &lt;a href="/v3/git/commits"&gt;Commits API&lt;/a&gt; which allows
for specifying the &lt;code&gt;date&lt;/code&gt; property.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript highlight"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"my commit message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Dirkjan Bussink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"d.bussink@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2014-02-27T15:05:06+01:00"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"parents"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"7d1b31e74ee336d15cbd21741bc88a537ed063a0"&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="s2"&gt;"tree"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"827efc6d56897b048c772eb4087f854f46256132"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="using-the-time-zone-header"&gt;Using the &lt;code&gt;Time-Zone&lt;/code&gt; header&lt;/h4&gt;

&lt;p&gt;It is possible to supply a &lt;code&gt;Time-Zone&lt;/code&gt; header which defines a timezone according
to the &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;list of names from the Olson database&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -H "Time-Zone: Europe/Amsterdam" -X POST https://api.github.com/repos/github/linguist/contents/new_file.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means that we generate a timestamp for the moment your API call is made in
the timezone this header defines. For example, the &lt;a href="/v3/repos/contents/"&gt;Contents API&lt;/a&gt;
generates a git commit for each addition or change and uses the current time
as the timestamp. This header will determine the timezone used for generating
that current timestamp.&lt;/p&gt;

&lt;h4 id="using-the-last-known-timezone-for-the-user"&gt;Using the last known timezone for the user&lt;/h4&gt;

&lt;p&gt;If no &lt;code&gt;Time-Zone&lt;/code&gt; header is specified and you make an authenticated call to the
API, we use the last known timezone for the authenticated user. The last know
timezone is updated whenever you browse the GitHub.com website.&lt;/p&gt;

&lt;h4 id="utc"&gt;UTC&lt;/h4&gt;

&lt;p&gt;If the steps above don’t result in any information, we use UTC as the timezone
to create the git commit.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, don’t hesitate to &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+timezones"&gt;contact&lt;/a&gt; us!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-03-03:/changes/2014-03-03-deployments-api-updates/</id>
    <title type="html">New Payload Format for Deployments</title>
    <published>2014-03-03T00:00:00Z</published>
    <updated>2014-03-03T00:00:00Z</updated>
    <author>
      <name>atmos</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-03-03-deployments-api-updates/" />
    <content type="html">&lt;p&gt;As we &lt;a href="/changes/2014-01-09-preview-the-new-deployments-api/"&gt;iterate on the preview&lt;/a&gt; for the new Deployments API, we’re making sure that it’s friendly to work with for the apps built on top of it.&lt;/p&gt;

&lt;h2 id="deserialize-deployment-payloads"&gt;Deserialize Deployment Payloads&lt;/h2&gt;

&lt;p&gt;To make the API even easier to use, we’ll now return your custom payload as a JSON object along with the rest of the Deployment resource. No need to parse it as JSON again.&lt;/p&gt;

&lt;h2 id="code-you-need-to-update"&gt;Code You Need to Update&lt;/h2&gt;

&lt;p&gt;You should only need to remove the JSON parsing if you’re taking advantage of the custom payloads. The formats for creating Deployments remain unchanged.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or feedback, please &lt;a href="https://github.com/contact?form%5Bsubject%5D=Deployments+API"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-28:/changes/2014-02-28-issue-and-pull-query-enhancements/</id>
    <title type="html">Query enhancements for listing issues and pull requests</title>
    <published>2014-02-28T00:00:00Z</published>
    <updated>2014-02-28T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-28-issue-and-pull-query-enhancements/" />
    <content type="html">&lt;p&gt;We’ve made it even easier to list all &lt;a href="/v3/issues/#list-issues"&gt;issues&lt;/a&gt; and &lt;a href="/v3/pulls/#list-pull-requests"&gt;pull requests&lt;/a&gt; via the API.
The &lt;code&gt;state&lt;/code&gt; parameter now supports a value of &lt;code&gt;all&lt;/code&gt; that will return issues and
pull requests regardless of state.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl https://api.github.com/repos/atom/vim-mode/issues\?state\=all
&lt;/pre&gt;

&lt;p&gt;We’ve also introduced new sorting options for &lt;a href="/v3/pulls/#list-pull-requests"&gt;listing pull requests&lt;/a&gt;. You can now sort pull requests by &lt;code&gt;created&lt;/code&gt;, &lt;code&gt;updated&lt;/code&gt;,
&lt;code&gt;popularity&lt;/code&gt;, and &lt;code&gt;long-running&lt;/code&gt;.&lt;/p&gt;

&lt;pre class="terminal"&gt;
$ curl https://api.github.com/repos/rails/rails/pulls\?sort\=long-running\&amp;amp;direction\=desc
&lt;/pre&gt;

&lt;p&gt;Happy querying. If you have any questions or feedback &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+query+enhancements"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-25:/changes/2014-02-25-organization-oauth-scopes/</id>
    <title type="html">OAuth scopes for organization and team resources</title>
    <published>2014-02-25T00:00:00Z</published>
    <updated>2014-02-25T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-25-organization-oauth-scopes/" />
    <content type="html">&lt;p&gt;As a follow up to &lt;a href="http://developer.github.com/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/"&gt;the new scopes&lt;/a&gt; we announced yesterday, we’ve
introduced even more OAuth scopes for working with organization and team
resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;code&gt;read:org&lt;/code&gt; provides read-only access to organizations, teams, and membership.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;write:org&lt;/code&gt; allows an application to publicize and unpublicize an organization membership.&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;admin:org&lt;/code&gt; enables an application to fully manage organizations, teams, and memberships.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out &lt;a href="/v3/oauth/#scopes"&gt;the full list of OAuth scopes&lt;/a&gt; supported by the API to
ensure your application asks for only the permissions it needs. As always, if
you have any questions or feedback, &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+org+scopes"&gt;get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-24:/changes/2014-02-24-wildcard-event-for-webhooks/</id>
    <title type="html">Wildcard Event for Webhooks</title>
    <published>2014-02-24T00:00:00Z</published>
    <updated>2014-02-24T00:00:00Z</updated>
    <author>
      <name>kdaigle</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-24-wildcard-event-for-webhooks/" />
    <content type="html">&lt;p&gt;We’ve made a small change to make it easier for webhook integrators to receive “everything”.
Instead of adding every event to your webhook, you can now opt-in to all events (including
all new events in the future) by using the &lt;a href="/webhooks/#wildcard-event"&gt;wildcard event&lt;/a&gt; (&lt;code&gt;*&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you add this event to an existing webhook, we’ll remove the existing specific events and
send you payloads for all supported events. As we add new events, you’ll automatically
begin receiving those too.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:developer.github.com,2014-02-24:/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/</id>
    <title type="html">Finer-grained OAuth scopes for SSH keys</title>
    <published>2014-02-24T00:00:00Z</published>
    <updated>2014-02-24T00:00:00Z</updated>
    <author>
      <name>pengwynn</name>
      <uri>https://github.com/technoweenie</uri>
    </author>
    <link rel="alternate" href="http://developer.github.com/changes/2014-02-24-finer-grained-scopes-for-ssh-keys/" />
    <content type="html">&lt;p&gt;As &lt;a href="https://github.com/blog/1786-enhanced-oauth-security-for-ssh-keys"&gt;we announced&lt;/a&gt;, we’ve made some important changes to the way that API consumers manage SSH keys.&lt;/p&gt;

&lt;h2 id="finer-grained-oauth-scopes"&gt;Finer-grained OAuth scopes&lt;/h2&gt;

&lt;p&gt;To help third party applications request only permissions that they need, the API now supports three new &lt;a href="/v3/oauth/#scopes"&gt;scopes&lt;/a&gt; for working with a user’s public SSH keys.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;code&gt;read:public_key&lt;/code&gt; provides read access to the user’s SSH keys&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;write:public_key&lt;/code&gt; allows an app to read existing keys and create new ones&lt;/li&gt;
  &lt;li&gt;
&lt;code&gt;admin:public_key&lt;/code&gt; enables an app to read, write, and delete keys&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="changes-to-user-scope"&gt;Changes to &lt;code&gt;user&lt;/code&gt; scope&lt;/h2&gt;

&lt;p&gt;Historically, &lt;code&gt;user&lt;/code&gt; scope has provided full access to manage a user’s SSH keys. Now that we have dedicated scopes for managing a user’s SSH keys, we have removed those permissions from the &lt;code&gt;user&lt;/code&gt; scope. Now &lt;code&gt;user&lt;/code&gt; scope will no longer provide access to SSH keys. Applications that need this access should request one of the new scopes described above.&lt;/p&gt;

&lt;h2 id="keys-are-now-immutable"&gt;Keys are now immutable&lt;/h2&gt;

&lt;p&gt;To simplify the security audit trail for SSH keys, we’re making keys immutable. API consumers can continue to create keys and delete keys as needed, but keys can no longer be changed. To change an existing key, API consumers should delete the existing key and create a new one with the desired attributes. This change applies both to a &lt;a href="/v3/users/keys/"&gt;user’s SSH keys&lt;/a&gt; and a &lt;a href="/v3/repos/keys/"&gt;repository’s deploy keys&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="deleting-keys-when-revoking-a-token"&gt;Deleting keys when revoking a token&lt;/h2&gt;

&lt;p&gt;Also any keys created via an OAuth token from this point forward will be deleted when that token is revoked.&lt;/p&gt;

&lt;p&gt;As always, if you have any questions or feedback, &lt;a href="https://github.com/contact?form%5Bsubject%5D=API+improvements+for+SSH+keys"&gt;please get in touch&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
</feed>
